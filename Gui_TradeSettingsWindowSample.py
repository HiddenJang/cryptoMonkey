# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Gui_TradeSettingsWindowSample.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_TradeSettingsWindow(object):
    def setupUi(self, TradeSettingsWindow):
        TradeSettingsWindow.setObjectName("TradeSettingsWindow")
        TradeSettingsWindow.setWindowModality(QtCore.Qt.WindowModal)
        TradeSettingsWindow.resize(852, 565)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(TradeSettingsWindow.sizePolicy().hasHeightForWidth())
        TradeSettingsWindow.setSizePolicy(sizePolicy)
        TradeSettingsWindow.setMinimumSize(QtCore.QSize(315, 357))
        TradeSettingsWindow.setContextMenuPolicy(QtCore.Qt.ActionsContextMenu)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("img/Logo.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        TradeSettingsWindow.setWindowIcon(icon)
        TradeSettingsWindow.setWhatsThis("")
        TradeSettingsWindow.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0.983, y2:0.227273, stop:0 rgba(227, 91, 0, 255), stop:1 rgba(255, 255, 255, 255));")
        TradeSettingsWindow.setModal(True)
        self.comboBox_exchangeType = QtWidgets.QComboBox(TradeSettingsWindow)
        self.comboBox_exchangeType.setEnabled(True)
        self.comboBox_exchangeType.setGeometry(QtCore.QRect(10, 28, 100, 22))
        self.comboBox_exchangeType.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.comboBox_exchangeType.setObjectName("comboBox_exchangeType")
        self.comboBox_exchangeType.addItem("")
        self.comboBox_exchangeType.addItem("")
        self.comboBox_exchangeType.addItem("")
        self.comboBox_exchangeType.addItem("")
        self.label_exchangeType = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_exchangeType.setEnabled(True)
        self.label_exchangeType.setGeometry(QtCore.QRect(12, 5, 81, 20))
        self.label_exchangeType.setStyleSheet("background-color:0,0,0,10")
        self.label_exchangeType.setObjectName("label_exchangeType")
        self.label_tradeBaseCoin = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_tradeBaseCoin.setEnabled(True)
        self.label_tradeBaseCoin.setGeometry(QtCore.QRect(231, 5, 110, 20))
        self.label_tradeBaseCoin.setStyleSheet("background-color:0,0,0,10")
        self.label_tradeBaseCoin.setObjectName("label_tradeBaseCoin")
        self.label_tradeQuotCoin = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_tradeQuotCoin.setEnabled(True)
        self.label_tradeQuotCoin.setGeometry(QtCore.QRect(120, 6, 111, 20))
        self.label_tradeQuotCoin.setStyleSheet("background-color:0,0,0,10")
        self.label_tradeQuotCoin.setObjectName("label_tradeQuotCoin")
        self.comboBox_tradeBaseCoin = QtWidgets.QComboBox(TradeSettingsWindow)
        self.comboBox_tradeBaseCoin.setEnabled(True)
        self.comboBox_tradeBaseCoin.setGeometry(QtCore.QRect(230, 26, 100, 22))
        self.comboBox_tradeBaseCoin.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.comboBox_tradeBaseCoin.setInputMethodHints(QtCore.Qt.ImhNone)
        self.comboBox_tradeBaseCoin.setEditable(False)
        self.comboBox_tradeBaseCoin.setInsertPolicy(QtWidgets.QComboBox.InsertAlphabetically)
        self.comboBox_tradeBaseCoin.setObjectName("comboBox_tradeBaseCoin")
        self.comboBox_tradeBaseCoin.addItem("")
        self.comboBox_tradeBaseCoin.addItem("")
        self.comboBox_tradeBaseCoin.addItem("")
        self.comboBox_tradeBaseCoin.addItem("")
        self.comboBox_tradeBaseCoin.addItem("")
        self.comboBox_tradeQuotCoin = QtWidgets.QComboBox(TradeSettingsWindow)
        self.comboBox_tradeQuotCoin.setEnabled(True)
        self.comboBox_tradeQuotCoin.setGeometry(QtCore.QRect(120, 27, 100, 22))
        self.comboBox_tradeQuotCoin.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.comboBox_tradeQuotCoin.setObjectName("comboBox_tradeQuotCoin")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.label_percentStartCondition = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_percentStartCondition.setEnabled(True)
        self.label_percentStartCondition.setGeometry(QtCore.QRect(12, 85, 150, 20))
        self.label_percentStartCondition.setStyleSheet("background-color:0,0,0,10")
        self.label_percentStartCondition.setObjectName("label_percentStartCondition")
        self.doubleSpinBox_percentStartCondition = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_percentStartCondition.setEnabled(True)
        self.doubleSpinBox_percentStartCondition.setGeometry(QtCore.QRect(12, 105, 62, 22))
        self.doubleSpinBox_percentStartCondition.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_percentStartCondition.setProperty("value", 5.0)
        self.doubleSpinBox_percentStartCondition.setObjectName("doubleSpinBox_percentStartCondition")
        self.label_purchaseAmount = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_purchaseAmount.setEnabled(True)
        self.label_purchaseAmount.setGeometry(QtCore.QRect(10, 150, 160, 20))
        self.label_purchaseAmount.setStyleSheet("background-color:0,0,0,10")
        self.label_purchaseAmount.setObjectName("label_purchaseAmount")
        self.doubleSpinBox_purchaseAmount = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_purchaseAmount.setEnabled(True)
        self.doubleSpinBox_purchaseAmount.setGeometry(QtCore.QRect(10, 170, 62, 22))
        self.doubleSpinBox_purchaseAmount.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_purchaseAmount.setMaximum(999.99)
        self.doubleSpinBox_purchaseAmount.setProperty("value", 10.0)
        self.doubleSpinBox_purchaseAmount.setObjectName("doubleSpinBox_purchaseAmount")
        self.line_startTradeCondition = QtWidgets.QFrame(TradeSettingsWindow)
        self.line_startTradeCondition.setGeometry(QtCore.QRect(167, 91, 3, 40))
        self.line_startTradeCondition.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_startTradeCondition.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_startTradeCondition.setObjectName("line_startTradeCondition")
        self.label_priceStartCondition = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_priceStartCondition.setEnabled(True)
        self.label_priceStartCondition.setGeometry(QtCore.QRect(184, 86, 200, 20))
        self.label_priceStartCondition.setStyleSheet("background-color:0,0,0,10")
        self.label_priceStartCondition.setObjectName("label_priceStartCondition")
        self.doubleSpinBox_priceStartCondition = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_priceStartCondition.setEnabled(True)
        self.doubleSpinBox_priceStartCondition.setGeometry(QtCore.QRect(184, 106, 62, 22))
        self.doubleSpinBox_priceStartCondition.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_priceStartCondition.setObjectName("doubleSpinBox_priceStartCondition")
        self.label_startTradeCondition = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_startTradeCondition.setGeometry(QtCore.QRect(100, 66, 120, 20))
        self.label_startTradeCondition.setStyleSheet("background-color:0,0,0,10")
        self.label_startTradeCondition.setObjectName("label_startTradeCondition")
        self.line_settingPanel = QtWidgets.QFrame(TradeSettingsWindow)
        self.line_settingPanel.setGeometry(QtCore.QRect(10, 52, 370, 16))
        self.line_settingPanel.setStyleSheet("background-color:0,0,0,10")
        self.line_settingPanel.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_settingPanel.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_settingPanel.setObjectName("line_settingPanel")
        self.line_settingPanel_2 = QtWidgets.QFrame(TradeSettingsWindow)
        self.line_settingPanel_2.setGeometry(QtCore.QRect(10, 132, 370, 16))
        self.line_settingPanel_2.setStyleSheet("background-color:0,0,0,10")
        self.line_settingPanel_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_settingPanel_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_settingPanel_2.setObjectName("line_settingPanel_2")
        self.line_settingPanel_3 = QtWidgets.QFrame(TradeSettingsWindow)
        self.line_settingPanel_3.setGeometry(QtCore.QRect(10, 200, 830, 16))
        self.line_settingPanel_3.setStyleSheet("background-color:0,0,0,10")
        self.line_settingPanel_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_settingPanel_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_settingPanel_3.setObjectName("line_settingPanel_3")
        self.label_positiveBranch_sell = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_positiveBranch_sell.setGeometry(QtCore.QRect(10, 235, 321, 20))
        self.label_positiveBranch_sell.setStyleSheet("background-color:0,0,0,10")
        self.label_positiveBranch_sell.setFrameShape(QtWidgets.QFrame.Box)
        self.label_positiveBranch_sell.setObjectName("label_positiveBranch_sell")
        self.label_positiveBranch_upPercent = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_positiveBranch_upPercent.setEnabled(True)
        self.label_positiveBranch_upPercent.setGeometry(QtCore.QRect(137, 254, 230, 20))
        self.label_positiveBranch_upPercent.setStyleSheet("background-color:0,0,0,10")
        self.label_positiveBranch_upPercent.setObjectName("label_positiveBranch_upPercent")
        self.doubleSpinBox_positiveBranch_upPercent = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_positiveBranch_upPercent.setEnabled(True)
        self.doubleSpinBox_positiveBranch_upPercent.setGeometry(QtCore.QRect(137, 274, 62, 22))
        self.doubleSpinBox_positiveBranch_upPercent.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_positiveBranch_upPercent.setMaximum(999.99)
        self.doubleSpinBox_positiveBranch_upPercent.setProperty("value", 10.0)
        self.doubleSpinBox_positiveBranch_upPercent.setObjectName("doubleSpinBox_positiveBranch_upPercent")
        self.label_positiveBranch_sellPercent = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_positiveBranch_sellPercent.setEnabled(True)
        self.label_positiveBranch_sellPercent.setGeometry(QtCore.QRect(137, 294, 190, 20))
        self.label_positiveBranch_sellPercent.setStyleSheet("background-color:0,0,0,10")
        self.label_positiveBranch_sellPercent.setObjectName("label_positiveBranch_sellPercent")
        self.doubleSpinBox_positiveBranch_sellPercent = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_positiveBranch_sellPercent.setEnabled(True)
        self.doubleSpinBox_positiveBranch_sellPercent.setGeometry(QtCore.QRect(137, 314, 62, 22))
        self.doubleSpinBox_positiveBranch_sellPercent.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_positiveBranch_sellPercent.setMaximum(999.99)
        self.doubleSpinBox_positiveBranch_sellPercent.setProperty("value", 50.0)
        self.doubleSpinBox_positiveBranch_sellPercent.setObjectName("doubleSpinBox_positiveBranch_sellPercent")
        self.label_positiveBranch = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_positiveBranch.setGeometry(QtCore.QRect(95, 213, 160, 20))
        self.label_positiveBranch.setStyleSheet("background-color:0,0,0,10")
        self.label_positiveBranch.setObjectName("label_positiveBranch")
        self.line_startTradeCondition_2 = QtWidgets.QFrame(TradeSettingsWindow)
        self.line_startTradeCondition_2.setGeometry(QtCore.QRect(368, 220, 3, 330))
        self.line_startTradeCondition_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_startTradeCondition_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_startTradeCondition_2.setObjectName("line_startTradeCondition_2")
        self.label_negativeBranch = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_negativeBranch.setGeometry(QtCore.QRect(451, 214, 160, 20))
        self.label_negativeBranch.setStyleSheet("background-color:0,0,0,10")
        self.label_negativeBranch.setObjectName("label_negativeBranch")
        self.doubleSpinBox_negativeBranch_averagePercent_1 = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_negativeBranch_averagePercent_1.setEnabled(True)
        self.doubleSpinBox_negativeBranch_averagePercent_1.setGeometry(QtCore.QRect(485, 316, 62, 22))
        self.doubleSpinBox_negativeBranch_averagePercent_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_negativeBranch_averagePercent_1.setMaximum(999.99)
        self.doubleSpinBox_negativeBranch_averagePercent_1.setProperty("value", 25.0)
        self.doubleSpinBox_negativeBranch_averagePercent_1.setObjectName("doubleSpinBox_negativeBranch_averagePercent_1")
        self.label_negativeBranch_averagePercent_1 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_negativeBranch_averagePercent_1.setEnabled(True)
        self.label_negativeBranch_averagePercent_1.setGeometry(QtCore.QRect(485, 296, 150, 20))
        self.label_negativeBranch_averagePercent_1.setStyleSheet("background-color:0,0,0,10")
        self.label_negativeBranch_averagePercent_1.setObjectName("label_negativeBranch_averagePercent_1")
        self.doubleSpinBox_negativeBranch_downPercent_1 = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_negativeBranch_downPercent_1.setEnabled(True)
        self.doubleSpinBox_negativeBranch_downPercent_1.setGeometry(QtCore.QRect(485, 276, 62, 22))
        self.doubleSpinBox_negativeBranch_downPercent_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_negativeBranch_downPercent_1.setMaximum(999.99)
        self.doubleSpinBox_negativeBranch_downPercent_1.setProperty("value", 5.0)
        self.doubleSpinBox_negativeBranch_downPercent_1.setObjectName("doubleSpinBox_negativeBranch_downPercent_1")
        self.label_negativeBranch_downPercent_1 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_negativeBranch_downPercent_1.setEnabled(True)
        self.label_negativeBranch_downPercent_1.setGeometry(QtCore.QRect(485, 256, 100, 20))
        self.label_negativeBranch_downPercent_1.setStyleSheet("background-color:0,0,0,10")
        self.label_negativeBranch_downPercent_1.setObjectName("label_negativeBranch_downPercent_1")
        self.label_negativeBranch_averaging1 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_negativeBranch_averaging1.setGeometry(QtCore.QRect(439, 235, 171, 20))
        self.label_negativeBranch_averaging1.setStyleSheet("background-color:0,0,0,10")
        self.label_negativeBranch_averaging1.setFrameShape(QtWidgets.QFrame.Box)
        self.label_negativeBranch_averaging1.setObjectName("label_negativeBranch_averaging1")
        self.line_startTradeCondition_3 = QtWidgets.QFrame(TradeSettingsWindow)
        self.line_startTradeCondition_3.setGeometry(QtCore.QRect(839, 221, 3, 330))
        self.line_startTradeCondition_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_startTradeCondition_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_startTradeCondition_3.setObjectName("line_startTradeCondition_3")
        self.doubleSpinBox_negativeBranch_averagePercent_2 = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_negativeBranch_averagePercent_2.setEnabled(True)
        self.doubleSpinBox_negativeBranch_averagePercent_2.setGeometry(QtCore.QRect(380, 424, 62, 22))
        self.doubleSpinBox_negativeBranch_averagePercent_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_negativeBranch_averagePercent_2.setMaximum(999.99)
        self.doubleSpinBox_negativeBranch_averagePercent_2.setProperty("value", 25.0)
        self.doubleSpinBox_negativeBranch_averagePercent_2.setObjectName("doubleSpinBox_negativeBranch_averagePercent_2")
        self.doubleSpinBox_negativeBranch_downPercent_2 = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_negativeBranch_downPercent_2.setEnabled(True)
        self.doubleSpinBox_negativeBranch_downPercent_2.setGeometry(QtCore.QRect(380, 384, 62, 22))
        self.doubleSpinBox_negativeBranch_downPercent_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_negativeBranch_downPercent_2.setMaximum(999.99)
        self.doubleSpinBox_negativeBranch_downPercent_2.setProperty("value", 5.0)
        self.doubleSpinBox_negativeBranch_downPercent_2.setObjectName("doubleSpinBox_negativeBranch_downPercent_2")
        self.label_negativeBranch_averaging2 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_negativeBranch_averaging2.setGeometry(QtCore.QRect(397, 343, 260, 20))
        self.label_negativeBranch_averaging2.setStyleSheet("background-color:0,0,0,10")
        self.label_negativeBranch_averaging2.setFrameShape(QtWidgets.QFrame.Box)
        self.label_negativeBranch_averaging2.setObjectName("label_negativeBranch_averaging2")
        self.label_negativeBranch_averagePercent_2 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_negativeBranch_averagePercent_2.setEnabled(True)
        self.label_negativeBranch_averagePercent_2.setGeometry(QtCore.QRect(380, 404, 150, 20))
        self.label_negativeBranch_averagePercent_2.setStyleSheet("background-color:0,0,0,10")
        self.label_negativeBranch_averagePercent_2.setObjectName("label_negativeBranch_averagePercent_2")
        self.label_negativeBranch_downPercent_2 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_negativeBranch_downPercent_2.setEnabled(True)
        self.label_negativeBranch_downPercent_2.setGeometry(QtCore.QRect(380, 364, 100, 20))
        self.label_negativeBranch_downPercent_2.setStyleSheet("background-color:0,0,0,10")
        self.label_negativeBranch_downPercent_2.setObjectName("label_negativeBranch_downPercent_2")
        self.label_positiveBranch_upSellPercent_2 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_positiveBranch_upSellPercent_2.setEnabled(True)
        self.label_positiveBranch_upSellPercent_2.setGeometry(QtCore.QRect(10, 404, 190, 20))
        self.label_positiveBranch_upSellPercent_2.setStyleSheet("background-color:0,0,0,10")
        self.label_positiveBranch_upSellPercent_2.setObjectName("label_positiveBranch_upSellPercent_2")
        self.doubleSpinBox_positiveBranch_upSellPercent_2 = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_positiveBranch_upSellPercent_2.setEnabled(True)
        self.doubleSpinBox_positiveBranch_upSellPercent_2.setGeometry(QtCore.QRect(10, 424, 62, 22))
        self.doubleSpinBox_positiveBranch_upSellPercent_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_positiveBranch_upSellPercent_2.setMaximum(999.99)
        self.doubleSpinBox_positiveBranch_upSellPercent_2.setProperty("value", 25.0)
        self.doubleSpinBox_positiveBranch_upSellPercent_2.setObjectName("doubleSpinBox_positiveBranch_upSellPercent_2")
        self.label_positiveBranch_sell_2 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_positiveBranch_sell_2.setGeometry(QtCore.QRect(10, 343, 321, 20))
        self.label_positiveBranch_sell_2.setStyleSheet("background-color:0,0,0,10")
        self.label_positiveBranch_sell_2.setFrameShape(QtWidgets.QFrame.Box)
        self.label_positiveBranch_sell_2.setObjectName("label_positiveBranch_sell_2")
        self.label_positiveBranch_upPercent_2 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_positiveBranch_upPercent_2.setEnabled(True)
        self.label_positiveBranch_upPercent_2.setGeometry(QtCore.QRect(10, 364, 230, 20))
        self.label_positiveBranch_upPercent_2.setStyleSheet("background-color:0,0,0,10")
        self.label_positiveBranch_upPercent_2.setObjectName("label_positiveBranch_upPercent_2")
        self.doubleSpinBox_positiveBranch_upPercent_2 = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_positiveBranch_upPercent_2.setEnabled(True)
        self.doubleSpinBox_positiveBranch_upPercent_2.setGeometry(QtCore.QRect(10, 384, 62, 22))
        self.doubleSpinBox_positiveBranch_upPercent_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_positiveBranch_upPercent_2.setMaximum(999.99)
        self.doubleSpinBox_positiveBranch_upPercent_2.setProperty("value", 10.0)
        self.doubleSpinBox_positiveBranch_upPercent_2.setObjectName("doubleSpinBox_positiveBranch_upPercent_2")
        self.label_positiveBranch_downPercent_3 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_positiveBranch_downPercent_3.setEnabled(True)
        self.label_positiveBranch_downPercent_3.setGeometry(QtCore.QRect(221, 364, 131, 20))
        self.label_positiveBranch_downPercent_3.setStyleSheet("background-color:0,0,0,10")
        self.label_positiveBranch_downPercent_3.setObjectName("label_positiveBranch_downPercent_3")
        self.doubleSpinBox_positiveBranch_downPercent_3 = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_positiveBranch_downPercent_3.setEnabled(True)
        self.doubleSpinBox_positiveBranch_downPercent_3.setGeometry(QtCore.QRect(221, 384, 62, 22))
        self.doubleSpinBox_positiveBranch_downPercent_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_positiveBranch_downPercent_3.setMaximum(999.99)
        self.doubleSpinBox_positiveBranch_downPercent_3.setProperty("value", 5.0)
        self.doubleSpinBox_positiveBranch_downPercent_3.setObjectName("doubleSpinBox_positiveBranch_downPercent_3")
        self.doubleSpinBox_positiveBranch_downSellPercent_3 = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_positiveBranch_downSellPercent_3.setEnabled(True)
        self.doubleSpinBox_positiveBranch_downSellPercent_3.setGeometry(QtCore.QRect(221, 424, 62, 22))
        self.doubleSpinBox_positiveBranch_downSellPercent_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_positiveBranch_downSellPercent_3.setMaximum(999.99)
        self.doubleSpinBox_positiveBranch_downSellPercent_3.setProperty("value", 25.0)
        self.doubleSpinBox_positiveBranch_downSellPercent_3.setObjectName("doubleSpinBox_positiveBranch_downSellPercent_3")
        self.label_positiveBranch_downSellPercent_3 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_positiveBranch_downSellPercent_3.setEnabled(True)
        self.label_positiveBranch_downSellPercent_3.setGeometry(QtCore.QRect(221, 404, 141, 20))
        self.label_positiveBranch_downSellPercent_3.setStyleSheet("background-color:0,0,0,10")
        self.label_positiveBranch_downSellPercent_3.setObjectName("label_positiveBranch_downSellPercent_3")
        self.label_positiveBranch_or3 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_positiveBranch_or3.setGeometry(QtCore.QRect(170, 394, 31, 20))
        self.label_positiveBranch_or3.setStyleSheet("background-color:0,0,0,10")
        self.label_positiveBranch_or3.setObjectName("label_positiveBranch_or3")
        self.label_positiveBranch_sell_4 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_positiveBranch_sell_4.setGeometry(QtCore.QRect(10, 450, 321, 20))
        self.label_positiveBranch_sell_4.setStyleSheet("background-color:0,0,0,10")
        self.label_positiveBranch_sell_4.setFrameShape(QtWidgets.QFrame.Box)
        self.label_positiveBranch_sell_4.setObjectName("label_positiveBranch_sell_4")
        self.label_positiveBranch_upPercent_4 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_positiveBranch_upPercent_4.setEnabled(True)
        self.label_positiveBranch_upPercent_4.setGeometry(QtCore.QRect(10, 471, 230, 20))
        self.label_positiveBranch_upPercent_4.setStyleSheet("background-color:0,0,0,10")
        self.label_positiveBranch_upPercent_4.setObjectName("label_positiveBranch_upPercent_4")
        self.doubleSpinBox_positiveBranch_upPercent_4 = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_positiveBranch_upPercent_4.setEnabled(True)
        self.doubleSpinBox_positiveBranch_upPercent_4.setGeometry(QtCore.QRect(10, 491, 62, 22))
        self.doubleSpinBox_positiveBranch_upPercent_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_positiveBranch_upPercent_4.setMaximum(999.99)
        self.doubleSpinBox_positiveBranch_upPercent_4.setProperty("value", 10.0)
        self.doubleSpinBox_positiveBranch_upPercent_4.setObjectName("doubleSpinBox_positiveBranch_upPercent_4")
        self.doubleSpinBox_positiveBranch_downPercent_4 = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_positiveBranch_downPercent_4.setEnabled(True)
        self.doubleSpinBox_positiveBranch_downPercent_4.setGeometry(QtCore.QRect(221, 491, 62, 22))
        self.doubleSpinBox_positiveBranch_downPercent_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_positiveBranch_downPercent_4.setMaximum(999.99)
        self.doubleSpinBox_positiveBranch_downPercent_4.setProperty("value", 5.0)
        self.doubleSpinBox_positiveBranch_downPercent_4.setObjectName("doubleSpinBox_positiveBranch_downPercent_4")
        self.label_positiveBranch_downSellPercent_4 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_positiveBranch_downSellPercent_4.setEnabled(True)
        self.label_positiveBranch_downSellPercent_4.setGeometry(QtCore.QRect(221, 511, 141, 20))
        self.label_positiveBranch_downSellPercent_4.setStyleSheet("background-color:0,0,0,10")
        self.label_positiveBranch_downSellPercent_4.setObjectName("label_positiveBranch_downSellPercent_4")
        self.doubleSpinBox_positiveBranch_downSellPercent_4 = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_positiveBranch_downSellPercent_4.setEnabled(True)
        self.doubleSpinBox_positiveBranch_downSellPercent_4.setGeometry(QtCore.QRect(221, 531, 62, 22))
        self.doubleSpinBox_positiveBranch_downSellPercent_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_positiveBranch_downSellPercent_4.setMaximum(999.99)
        self.doubleSpinBox_positiveBranch_downSellPercent_4.setProperty("value", 25.0)
        self.doubleSpinBox_positiveBranch_downSellPercent_4.setObjectName("doubleSpinBox_positiveBranch_downSellPercent_4")
        self.doubleSpinBox_positiveBranch_upSellPercent_4 = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_positiveBranch_upSellPercent_4.setEnabled(True)
        self.doubleSpinBox_positiveBranch_upSellPercent_4.setGeometry(QtCore.QRect(10, 531, 62, 22))
        self.doubleSpinBox_positiveBranch_upSellPercent_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_positiveBranch_upSellPercent_4.setMaximum(999.99)
        self.doubleSpinBox_positiveBranch_upSellPercent_4.setProperty("value", 25.0)
        self.doubleSpinBox_positiveBranch_upSellPercent_4.setObjectName("doubleSpinBox_positiveBranch_upSellPercent_4")
        self.label_positiveBranch_or4 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_positiveBranch_or4.setGeometry(QtCore.QRect(170, 501, 31, 20))
        self.label_positiveBranch_or4.setStyleSheet("background-color:0,0,0,10")
        self.label_positiveBranch_or4.setObjectName("label_positiveBranch_or4")
        self.label_positiveBranch_upSellPercent_4 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_positiveBranch_upSellPercent_4.setEnabled(True)
        self.label_positiveBranch_upSellPercent_4.setGeometry(QtCore.QRect(10, 511, 190, 20))
        self.label_positiveBranch_upSellPercent_4.setStyleSheet("background-color:0,0,0,10")
        self.label_positiveBranch_upSellPercent_4.setObjectName("label_positiveBranch_upSellPercent_4")
        self.label_positiveBranch_downPercent_4 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_positiveBranch_downPercent_4.setEnabled(True)
        self.label_positiveBranch_downPercent_4.setGeometry(QtCore.QRect(221, 471, 131, 20))
        self.label_positiveBranch_downPercent_4.setStyleSheet("background-color:0,0,0,10")
        self.label_positiveBranch_downPercent_4.setObjectName("label_positiveBranch_downPercent_4")
        self.label_negativeBranch_upPercent1 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_negativeBranch_upPercent1.setEnabled(True)
        self.label_negativeBranch_upPercent1.setGeometry(QtCore.QRect(572, 364, 151, 20))
        self.label_negativeBranch_upPercent1.setStyleSheet("background-color:0,0,0,10")
        self.label_negativeBranch_upPercent1.setObjectName("label_negativeBranch_upPercent1")
        self.doubleSpinBox_negativeBranch_upPercent1 = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_negativeBranch_upPercent1.setEnabled(True)
        self.doubleSpinBox_negativeBranch_upPercent1.setGeometry(QtCore.QRect(572, 384, 62, 22))
        self.doubleSpinBox_negativeBranch_upPercent1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_negativeBranch_upPercent1.setMaximum(999.99)
        self.doubleSpinBox_negativeBranch_upPercent1.setProperty("value", 10.0)
        self.doubleSpinBox_negativeBranch_upPercent1.setObjectName("doubleSpinBox_negativeBranch_upPercent1")
        self.doubleSpinBox_negativeBranch_upSellPercent1 = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_negativeBranch_upSellPercent1.setEnabled(True)
        self.doubleSpinBox_negativeBranch_upSellPercent1.setGeometry(QtCore.QRect(572, 424, 62, 22))
        self.doubleSpinBox_negativeBranch_upSellPercent1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_negativeBranch_upSellPercent1.setMaximum(999.99)
        self.doubleSpinBox_negativeBranch_upSellPercent1.setProperty("value", 100.0)
        self.doubleSpinBox_negativeBranch_upSellPercent1.setObjectName("doubleSpinBox_negativeBranch_upSellPercent1")
        self.label_negativeBranch_upSellPercent1 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_negativeBranch_upSellPercent1.setEnabled(True)
        self.label_negativeBranch_upSellPercent1.setGeometry(QtCore.QRect(574, 404, 190, 20))
        self.label_negativeBranch_upSellPercent1.setStyleSheet("background-color:0,0,0,10")
        self.label_negativeBranch_upSellPercent1.setObjectName("label_negativeBranch_upSellPercent1")
        self.label_negativeBranch_long1 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_negativeBranch_long1.setGeometry(QtCore.QRect(448, 454, 150, 20))
        self.label_negativeBranch_long1.setStyleSheet("background-color:0,0,0,10")
        self.label_negativeBranch_long1.setFrameShape(QtWidgets.QFrame.Box)
        self.label_negativeBranch_long1.setObjectName("label_negativeBranch_long1")
        self.label_negativeBranch_long1_2 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_negativeBranch_long1_2.setEnabled(True)
        self.label_negativeBranch_long1_2.setGeometry(QtCore.QRect(485, 476, 100, 20))
        self.label_negativeBranch_long1_2.setStyleSheet("background-color:0,0,0,10")
        self.label_negativeBranch_long1_2.setObjectName("label_negativeBranch_long1_2")
        self.doubleSpinBox_negativeBranch_long1 = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_negativeBranch_long1.setEnabled(True)
        self.doubleSpinBox_negativeBranch_long1.setGeometry(QtCore.QRect(485, 496, 62, 22))
        self.doubleSpinBox_negativeBranch_long1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_negativeBranch_long1.setMaximum(999.99)
        self.doubleSpinBox_negativeBranch_long1.setProperty("value", 5.0)
        self.doubleSpinBox_negativeBranch_long1.setObjectName("doubleSpinBox_negativeBranch_long1")
        self.label_negativeBranch_sellAllLong1 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_negativeBranch_sellAllLong1.setEnabled(True)
        self.label_negativeBranch_sellAllLong1.setGeometry(QtCore.QRect(485, 517, 211, 20))
        self.label_negativeBranch_sellAllLong1.setStyleSheet("background-color:0,0,0,10")
        self.label_negativeBranch_sellAllLong1.setObjectName("label_negativeBranch_sellAllLong1")
        self.doubleSpinBox_negativeBranch_sellAllLong1 = QtWidgets.QDoubleSpinBox(TradeSettingsWindow)
        self.doubleSpinBox_negativeBranch_sellAllLong1.setEnabled(True)
        self.doubleSpinBox_negativeBranch_sellAllLong1.setGeometry(QtCore.QRect(485, 537, 62, 22))
        self.doubleSpinBox_negativeBranch_sellAllLong1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.doubleSpinBox_negativeBranch_sellAllLong1.setMaximum(999.99)
        self.doubleSpinBox_negativeBranch_sellAllLong1.setProperty("value", 15.0)
        self.doubleSpinBox_negativeBranch_sellAllLong1.setObjectName("doubleSpinBox_negativeBranch_sellAllLong1")
        self.comboBox_orderType = QtWidgets.QComboBox(TradeSettingsWindow)
        self.comboBox_orderType.setEnabled(True)
        self.comboBox_orderType.setGeometry(QtCore.QRect(341, 26, 100, 22))
        self.comboBox_orderType.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.comboBox_orderType.setObjectName("comboBox_orderType")
        self.comboBox_orderType.addItem("")
        self.comboBox_orderType.addItem("")
        self.label_orderType = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_orderType.setEnabled(True)
        self.label_orderType.setGeometry(QtCore.QRect(343, 6, 81, 20))
        self.label_orderType.setStyleSheet("background-color:0,0,0,10")
        self.label_orderType.setObjectName("label_orderType")
        self.pushButton_startTrade = QtWidgets.QPushButton(TradeSettingsWindow)
        self.pushButton_startTrade.setGeometry(QtCore.QRect(465, 26, 100, 23))
        self.pushButton_startTrade.setStyleSheet("background-color: rgb(126, 255, 112);")
        self.pushButton_startTrade.setObjectName("pushButton_startTrade")
        self.label_negativeBranch_or1 = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_negativeBranch_or1.setGeometry(QtCore.QRect(530, 400, 31, 20))
        self.label_negativeBranch_or1.setStyleSheet("background-color:0,0,0,10")
        self.label_negativeBranch_or1.setObjectName("label_negativeBranch_or1")
        self.pushButton_stopTrade = QtWidgets.QPushButton(TradeSettingsWindow)
        self.pushButton_stopTrade.setGeometry(QtCore.QRect(465, 60, 100, 23))
        self.pushButton_stopTrade.setStyleSheet("background-color: rgb(255, 40, 25);")
        self.pushButton_stopTrade.setObjectName("pushButton_stopTrade")
        self.pushButton_EnableRefreshTime = QtWidgets.QPushButton(TradeSettingsWindow)
        self.pushButton_EnableRefreshTime.setEnabled(True)
        self.pushButton_EnableRefreshTime.setGeometry(QtCore.QRect(515, 122, 75, 23))
        self.pushButton_EnableRefreshTime.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.pushButton_EnableRefreshTime.setObjectName("pushButton_EnableRefreshTime")
        self.label_refreshTime = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_refreshTime.setEnabled(True)
        self.label_refreshTime.setGeometry(QtCore.QRect(465, 102, 200, 16))
        self.label_refreshTime.setStyleSheet("background-color:0,0,0,10")
        self.label_refreshTime.setObjectName("label_refreshTime")
        self.spinBox_refreshTime = QtWidgets.QSpinBox(TradeSettingsWindow)
        self.spinBox_refreshTime.setEnabled(True)
        self.spinBox_refreshTime.setGeometry(QtCore.QRect(465, 122, 42, 22))
        self.spinBox_refreshTime.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.spinBox_refreshTime.setProperty("value", 3)
        self.spinBox_refreshTime.setObjectName("spinBox_refreshTime")
        self.label_startBalance = QtWidgets.QLabel(TradeSettingsWindow)
        self.label_startBalance.setEnabled(True)
        self.label_startBalance.setGeometry(QtCore.QRect(589, 5, 161, 16))
        self.label_startBalance.setStyleSheet("background-color:0,0,0,10")
        self.label_startBalance.setObjectName("label_startBalance")
        self.spinBox_startBalance = QtWidgets.QSpinBox(TradeSettingsWindow)
        self.spinBox_startBalance.setEnabled(True)
        self.spinBox_startBalance.setGeometry(QtCore.QRect(590, 25, 50, 22))
        self.spinBox_startBalance.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.spinBox_startBalance.setMaximum(9999)
        self.spinBox_startBalance.setProperty("value", 100)
        self.spinBox_startBalance.setObjectName("spinBox_startBalance")

        self.retranslateUi(TradeSettingsWindow)
        QtCore.QMetaObject.connectSlotsByName(TradeSettingsWindow)

    def retranslateUi(self, TradeSettingsWindow):
        _translate = QtCore.QCoreApplication.translate
        TradeSettingsWindow.setWindowTitle(_translate("TradeSettingsWindow", "Настройки крипто-бота"))
        self.comboBox_exchangeType.setItemText(0, _translate("TradeSettingsWindow", "Huobi"))
        self.comboBox_exchangeType.setItemText(1, _translate("TradeSettingsWindow", "Myfin"))
        self.comboBox_exchangeType.setItemText(2, _translate("TradeSettingsWindow", "Kucoin"))
        self.comboBox_exchangeType.setItemText(3, _translate("TradeSettingsWindow", "Coinbase"))
        self.label_exchangeType.setText(_translate("TradeSettingsWindow", "Криптобиржа"))
        self.label_tradeBaseCoin.setText(_translate("TradeSettingsWindow", "Базовая валюта"))
        self.label_tradeQuotCoin.setText(_translate("TradeSettingsWindow", "Котируемая валюта"))
        self.comboBox_tradeBaseCoin.setCurrentText(_translate("TradeSettingsWindow", "USDT"))
        self.comboBox_tradeBaseCoin.setItemText(0, _translate("TradeSettingsWindow", "USDT"))
        self.comboBox_tradeBaseCoin.setItemText(1, _translate("TradeSettingsWindow", "RUB"))
        self.comboBox_tradeBaseCoin.setItemText(2, _translate("TradeSettingsWindow", "USD"))
        self.comboBox_tradeBaseCoin.setItemText(3, _translate("TradeSettingsWindow", "EUR"))
        self.comboBox_tradeBaseCoin.setItemText(4, _translate("TradeSettingsWindow", "GBP"))
        self.comboBox_tradeQuotCoin.setItemText(0, _translate("TradeSettingsWindow", "XRP"))
        self.comboBox_tradeQuotCoin.setItemText(1, _translate("TradeSettingsWindow", "BTC"))
        self.comboBox_tradeQuotCoin.setItemText(2, _translate("TradeSettingsWindow", "ETH"))
        self.comboBox_tradeQuotCoin.setItemText(3, _translate("TradeSettingsWindow", "USDT"))
        self.comboBox_tradeQuotCoin.setItemText(4, _translate("TradeSettingsWindow", "BNB"))
        self.comboBox_tradeQuotCoin.setItemText(5, _translate("TradeSettingsWindow", "USD Coin"))
        self.comboBox_tradeQuotCoin.setItemText(6, _translate("TradeSettingsWindow", "Cardano"))
        self.comboBox_tradeQuotCoin.setItemText(7, _translate("TradeSettingsWindow", "Dogecoin"))
        self.comboBox_tradeQuotCoin.setItemText(8, _translate("TradeSettingsWindow", "Solana"))
        self.comboBox_tradeQuotCoin.setItemText(9, _translate("TradeSettingsWindow", "TRON"))
        self.comboBox_tradeQuotCoin.setItemText(10, _translate("TradeSettingsWindow", "Ton"))
        self.comboBox_tradeQuotCoin.setItemText(11, _translate("TradeSettingsWindow", "Dai"))
        self.comboBox_tradeQuotCoin.setItemText(12, _translate("TradeSettingsWindow", "Polkadot"))
        self.comboBox_tradeQuotCoin.setItemText(13, _translate("TradeSettingsWindow", "Polygon"))
        self.comboBox_tradeQuotCoin.setItemText(14, _translate("TradeSettingsWindow", "Litecoin"))
        self.comboBox_tradeQuotCoin.setItemText(15, _translate("TradeSettingsWindow", "SHIBA INU"))
        self.comboBox_tradeQuotCoin.setItemText(16, _translate("TradeSettingsWindow", "Wrapped Bitcoin"))
        self.comboBox_tradeQuotCoin.setItemText(17, _translate("TradeSettingsWindow", "Bitcoin Cash"))
        self.comboBox_tradeQuotCoin.setItemText(18, _translate("TradeSettingsWindow", "UNUS SED LEO"))
        self.comboBox_tradeQuotCoin.setItemText(19, _translate("TradeSettingsWindow", "Avalanche"))
        self.comboBox_tradeQuotCoin.setItemText(20, _translate("TradeSettingsWindow", "TrueUSD"))
        self.comboBox_tradeQuotCoin.setItemText(21, _translate("TradeSettingsWindow", "Chainlink"))
        self.comboBox_tradeQuotCoin.setItemText(22, _translate("TradeSettingsWindow", "Stellar Lumens"))
        self.comboBox_tradeQuotCoin.setItemText(23, _translate("TradeSettingsWindow", "Binance USD"))
        self.comboBox_tradeQuotCoin.setItemText(24, _translate("TradeSettingsWindow", "Monero"))
        self.comboBox_tradeQuotCoin.setItemText(25, _translate("TradeSettingsWindow", "Uniswap"))
        self.comboBox_tradeQuotCoin.setItemText(26, _translate("TradeSettingsWindow", "Aave UNI V2"))
        self.comboBox_tradeQuotCoin.setItemText(27, _translate("TradeSettingsWindow", "OKB"))
        self.comboBox_tradeQuotCoin.setItemText(28, _translate("TradeSettingsWindow", "Cosmos"))
        self.comboBox_tradeQuotCoin.setItemText(29, _translate("TradeSettingsWindow", "Ethereum Classic"))
        self.comboBox_tradeQuotCoin.setItemText(30, _translate("TradeSettingsWindow", "Binance Chain Native Token"))
        self.comboBox_tradeQuotCoin.setItemText(31, _translate("TradeSettingsWindow", "Crypto.com Coin"))
        self.comboBox_tradeQuotCoin.setItemText(32, _translate("TradeSettingsWindow", "Hedera Hashgraph"))
        self.comboBox_tradeQuotCoin.setItemText(33, _translate("TradeSettingsWindow", "THETA"))
        self.comboBox_tradeQuotCoin.setItemText(34, _translate("TradeSettingsWindow", "Wrapped Bitcoin"))
        self.comboBox_tradeQuotCoin.setItemText(35, _translate("TradeSettingsWindow", "IOTA"))
        self.comboBox_tradeQuotCoin.setItemText(36, _translate("TradeSettingsWindow", "Bitcoin Cash"))
        self.comboBox_tradeQuotCoin.setItemText(37, _translate("TradeSettingsWindow", "Stellar"))
        self.comboBox_tradeQuotCoin.setItemText(38, _translate("TradeSettingsWindow", "Acala"))
        self.comboBox_tradeQuotCoin.setItemText(39, _translate("TradeSettingsWindow", "XDC Mainnet"))
        self.comboBox_tradeQuotCoin.setItemText(40, _translate("TradeSettingsWindow", "KuCoin Token"))
        self.comboBox_tradeQuotCoin.setItemText(41, _translate("TradeSettingsWindow", "EOS"))
        self.comboBox_tradeQuotCoin.setItemText(42, _translate("TradeSettingsWindow", "ZCash"))
        self.comboBox_tradeQuotCoin.setItemText(43, _translate("TradeSettingsWindow", "NEO"))
        self.comboBox_tradeQuotCoin.setItemText(44, _translate("TradeSettingsWindow", "DigitalCash"))
        self.comboBox_tradeQuotCoin.setItemText(45, _translate("TradeSettingsWindow", "Verge"))
        self.comboBox_tradeQuotCoin.setItemText(46, _translate("TradeSettingsWindow", "OmiseGo"))
        self.comboBox_tradeQuotCoin.setItemText(47, _translate("TradeSettingsWindow", "NEM"))
        self.comboBox_tradeQuotCoin.setItemText(48, _translate("TradeSettingsWindow", "DigiByte"))
        self.comboBox_tradeQuotCoin.setItemText(49, _translate("TradeSettingsWindow", "Bitshares"))
        self.label_percentStartCondition.setText(_translate("TradeSettingsWindow", "При падении цены на, %"))
        self.label_purchaseAmount.setText(_translate("TradeSettingsWindow", "Закупить на, ед.баз.валюты"))
        self.label_priceStartCondition.setText(_translate("TradeSettingsWindow", "При падении цены до, ед.баз.валюты"))
        self.label_startTradeCondition.setText(_translate("TradeSettingsWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">Начать торговлю при</span></p></body></html>"))
        self.label_positiveBranch_sell.setText(_translate("TradeSettingsWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">БЛОК1 --------- Продать - Зафиксировать цену</span></p></body></html>"))
        self.label_positiveBranch_upPercent.setText(_translate("TradeSettingsWindow", "При увеличении цены на, %"))
        self.label_positiveBranch_sellPercent.setText(_translate("TradeSettingsWindow", "Процент купленой валюты"))
        self.label_positiveBranch.setText(_translate("TradeSettingsWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">Положительная ветка</span></p></body></html>"))
        self.label_negativeBranch.setText(_translate("TradeSettingsWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">Отрицательная ветка</span></p></body></html>"))
        self.label_negativeBranch_averagePercent_1.setText(_translate("TradeSettingsWindow", "Величина, % от закупочной"))
        self.label_negativeBranch_downPercent_1.setText(_translate("TradeSettingsWindow", "При падении на, %"))
        self.label_negativeBranch_averaging1.setText(_translate("TradeSettingsWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">БЛОК4 -- Усредниться 1</span></p></body></html>"))
        self.label_negativeBranch_averaging2.setText(_translate("TradeSettingsWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">БЛОК5 -- Усредниться 2 или Продать</span></p></body></html>"))
        self.label_negativeBranch_averagePercent_2.setText(_translate("TradeSettingsWindow", "Величина, % от закупочной"))
        self.label_negativeBranch_downPercent_2.setText(_translate("TradeSettingsWindow", "При падении на, %"))
        self.label_positiveBranch_upSellPercent_2.setText(_translate("TradeSettingsWindow", "Процент купленой валюты"))
        self.label_positiveBranch_sell_2.setText(_translate("TradeSettingsWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">БЛОК2 --------- Продать - Зафиксировать цену </span></p></body></html>"))
        self.label_positiveBranch_upPercent_2.setText(_translate("TradeSettingsWindow", "При увеличении цены на, %"))
        self.label_positiveBranch_downPercent_3.setText(_translate("TradeSettingsWindow", "При падении цены на, %"))
        self.label_positiveBranch_downSellPercent_3.setText(_translate("TradeSettingsWindow", "Процент купленой валюты"))
        self.label_positiveBranch_or3.setText(_translate("TradeSettingsWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">ИЛИ</span></p></body></html>"))
        self.label_positiveBranch_sell_4.setText(_translate("TradeSettingsWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">БЛОК3 --------- Продать - Зафиксировать цену </span></p></body></html>"))
        self.label_positiveBranch_upPercent_4.setText(_translate("TradeSettingsWindow", "При увеличении цены на, %"))
        self.label_positiveBranch_downSellPercent_4.setText(_translate("TradeSettingsWindow", "Процент купленой валюты"))
        self.label_positiveBranch_or4.setText(_translate("TradeSettingsWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">ИЛИ</span></p></body></html>"))
        self.label_positiveBranch_upSellPercent_4.setText(_translate("TradeSettingsWindow", "Процент купленой валюты"))
        self.label_positiveBranch_downPercent_4.setText(_translate("TradeSettingsWindow", "При падении цены на, %"))
        self.label_negativeBranch_upPercent1.setText(_translate("TradeSettingsWindow", "При увеличении цены на, %"))
        self.label_negativeBranch_upSellPercent1.setText(_translate("TradeSettingsWindow", "Процент купленой валюты"))
        self.label_negativeBranch_long1.setText(_translate("TradeSettingsWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">БЛОК6 -- Долгосрок</span></p></body></html>"))
        self.label_negativeBranch_long1_2.setText(_translate("TradeSettingsWindow", "При падении на, %"))
        self.label_negativeBranch_sellAllLong1.setText(_translate("TradeSettingsWindow", "Продать все при увеличении цены на, %"))
        self.comboBox_orderType.setItemText(0, _translate("TradeSettingsWindow", "Лимитный"))
        self.comboBox_orderType.setItemText(1, _translate("TradeSettingsWindow", "Рыночный"))
        self.label_orderType.setText(_translate("TradeSettingsWindow", "Тип ордера"))
        self.pushButton_startTrade.setText(_translate("TradeSettingsWindow", "Старт"))
        self.label_negativeBranch_or1.setText(_translate("TradeSettingsWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">ИЛИ</span></p></body></html>"))
        self.pushButton_stopTrade.setText(_translate("TradeSettingsWindow", "Стоп"))
        self.pushButton_EnableRefreshTime.setText(_translate("TradeSettingsWindow", "Установить"))
        self.label_refreshTime.setText(_translate("TradeSettingsWindow", "<html><head/><body><p>Время обновления текущей стоимости</p></body></html>"))
        self.label_startBalance.setText(_translate("TradeSettingsWindow", "<html><head/><body><p>Стартовый баланс (имитация)</p></body></html>"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    TradeSettingsWindow = QtWidgets.QDialog()
    ui = Ui_TradeSettingsWindow()
    ui.setupUi(TradeSettingsWindow)
    TradeSettingsWindow.show()
    sys.exit(app.exec_())
