# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Gui_CryptoMonkeySample.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_CryptoMonkey(object):
    def setupUi(self, CryptoMonkey):
        CryptoMonkey.setObjectName("CryptoMonkey")
        CryptoMonkey.resize(1209, 570)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(CryptoMonkey.sizePolicy().hasHeightForWidth())
        CryptoMonkey.setSizePolicy(sizePolicy)
        CryptoMonkey.setMinimumSize(QtCore.QSize(1209, 570))
        CryptoMonkey.setMaximumSize(QtCore.QSize(1209, 570))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("img/Logo.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        CryptoMonkey.setWindowIcon(icon)
        CryptoMonkey.setAutoFillBackground(False)
        self.centralwidget = QtWidgets.QWidget(CryptoMonkey)
        self.centralwidget.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.treeWidget_siteList = QtWidgets.QTreeWidget(self.centralwidget)
        self.treeWidget_siteList.setGeometry(QtCore.QRect(6, 5, 120, 540))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(9)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.treeWidget_siteList.sizePolicy().hasHeightForWidth())
        self.treeWidget_siteList.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setUnderline(False)
        self.treeWidget_siteList.setFont(font)
        self.treeWidget_siteList.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.treeWidget_siteList.setAutoFillBackground(False)
        self.treeWidget_siteList.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0.983, y2:0.227273, stop:0 rgba(245, 131, 86, 255), stop:1 rgba(255, 255, 255, 255));\n"
"")
        self.treeWidget_siteList.setMidLineWidth(0)
        self.treeWidget_siteList.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.treeWidget_siteList.setDragEnabled(False)
        self.treeWidget_siteList.setAlternatingRowColors(False)
        self.treeWidget_siteList.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.treeWidget_siteList.setIconSize(QtCore.QSize(20, 20))
        self.treeWidget_siteList.setTextElideMode(QtCore.Qt.ElideMiddle)
        self.treeWidget_siteList.setAutoExpandDelay(-1)
        self.treeWidget_siteList.setIndentation(4)
        self.treeWidget_siteList.setRootIsDecorated(True)
        self.treeWidget_siteList.setUniformRowHeights(False)
        self.treeWidget_siteList.setItemsExpandable(True)
        self.treeWidget_siteList.setAnimated(False)
        self.treeWidget_siteList.setAllColumnsShowFocus(False)
        self.treeWidget_siteList.setWordWrap(False)
        self.treeWidget_siteList.setHeaderHidden(False)
        self.treeWidget_siteList.setExpandsOnDoubleClick(True)
        self.treeWidget_siteList.setColumnCount(1)
        self.treeWidget_siteList.setObjectName("treeWidget_siteList")
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.treeWidget_siteList.headerItem().setFont(0, font)
        self.treeWidget_siteList.headerItem().setBackground(0, QtGui.QColor(227, 91, 0))
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget_siteList)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setUnderline(True)
        item_0.setFont(0, font)
        item_0.setCheckState(0, QtCore.Qt.Unchecked)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("img/Myfin.bmp"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_0.setIcon(0, icon1)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget_siteList)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setUnderline(True)
        item_0.setFont(0, font)
        item_0.setCheckState(0, QtCore.Qt.Unchecked)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("img/Kucoin.bmp"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_0.setIcon(0, icon2)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget_siteList)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(True)
        font.setWeight(50)
        font.setStrikeOut(False)
        font.setKerning(True)
        item_0.setFont(0, font)
        item_0.setCheckState(0, QtCore.Qt.Unchecked)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("img/Coinbase.bmp"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_0.setIcon(0, icon3)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget_siteList)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setUnderline(True)
        item_0.setFont(0, font)
        item_0.setCheckState(0, QtCore.Qt.Checked)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("img/Huobi.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item_0.setIcon(0, icon4)
        self.treeWidget_siteList.header().setVisible(True)
        self.treeWidget_siteList.header().setCascadingSectionResizes(False)
        self.treeWidget_siteList.header().setHighlightSections(True)
        self.treeWidget_siteList.header().setMinimumSectionSize(10)
        self.treeWidget_siteList.header().setStretchLastSection(True)
        self.label_header = QtWidgets.QLabel(self.centralwidget)
        self.label_header.setGeometry(QtCore.QRect(131, 5, 1070, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_header.setFont(font)
        self.label_header.setAutoFillBackground(False)
        self.label_header.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0.983, y2:0.227273, stop:0 rgba(227, 91, 0, 255), stop:1 rgba(255, 255, 255, 255));")
        self.label_header.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label_header.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_header.setText("")
        self.label_header.setScaledContents(False)
        self.label_header.setAlignment(QtCore.Qt.AlignCenter)
        self.label_header.setObjectName("label_header")
        self.tableWidget_mainResultWindow = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget_mainResultWindow.setGeometry(QtCore.QRect(131, 47, 687, 221))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableWidget_mainResultWindow.sizePolicy().hasHeightForWidth())
        self.tableWidget_mainResultWindow.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.tableWidget_mainResultWindow.setFont(font)
        self.tableWidget_mainResultWindow.setAutoFillBackground(False)
        self.tableWidget_mainResultWindow.setStyleSheet("")
        self.tableWidget_mainResultWindow.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.tableWidget_mainResultWindow.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.tableWidget_mainResultWindow.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableWidget_mainResultWindow.setDragEnabled(False)
        self.tableWidget_mainResultWindow.setAlternatingRowColors(True)
        self.tableWidget_mainResultWindow.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectItems)
        self.tableWidget_mainResultWindow.setShowGrid(True)
        self.tableWidget_mainResultWindow.setGridStyle(QtCore.Qt.SolidLine)
        self.tableWidget_mainResultWindow.setWordWrap(True)
        self.tableWidget_mainResultWindow.setCornerButtonEnabled(True)
        self.tableWidget_mainResultWindow.setRowCount(7)
        self.tableWidget_mainResultWindow.setColumnCount(3)
        self.tableWidget_mainResultWindow.setObjectName("tableWidget_mainResultWindow")
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(False)
        item.setFont(font)
        item.setBackground(QtGui.QColor(207, 207, 205))
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        item.setForeground(brush)
        self.tableWidget_mainResultWindow.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget_mainResultWindow.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget_mainResultWindow.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_mainResultWindow.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        brush = QtGui.QBrush(QtGui.QColor(181, 181, 181))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setBackground(brush)
        self.tableWidget_mainResultWindow.setItem(0, 1, item)
        self.tableWidget_mainResultWindow.horizontalHeader().setVisible(True)
        self.tableWidget_mainResultWindow.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget_mainResultWindow.horizontalHeader().setDefaultSectionSize(228)
        self.tableWidget_mainResultWindow.horizontalHeader().setHighlightSections(False)
        self.tableWidget_mainResultWindow.horizontalHeader().setMinimumSectionSize(39)
        self.tableWidget_mainResultWindow.horizontalHeader().setSortIndicatorShown(False)
        self.tableWidget_mainResultWindow.horizontalHeader().setStretchLastSection(True)
        self.tableWidget_mainResultWindow.verticalHeader().setVisible(False)
        self.tableWidget_mainResultWindow.verticalHeader().setCascadingSectionResizes(False)
        self.tableWidget_mainResultWindow.verticalHeader().setDefaultSectionSize(27)
        self.tableWidget_mainResultWindow.verticalHeader().setHighlightSections(False)
        self.tableWidget_mainResultWindow.verticalHeader().setMinimumSectionSize(20)
        self.tableWidget_mainResultWindow.verticalHeader().setSortIndicatorShown(False)
        self.tableWidget_mainResultWindow.verticalHeader().setStretchLastSection(True)
        self.tableWidget_diagWindow = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget_diagWindow.setGeometry(QtCore.QRect(131, 452, 687, 93))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(18)
        sizePolicy.setVerticalStretch(10)
        sizePolicy.setHeightForWidth(self.tableWidget_diagWindow.sizePolicy().hasHeightForWidth())
        self.tableWidget_diagWindow.setSizePolicy(sizePolicy)
        self.tableWidget_diagWindow.setBaseSize(QtCore.QSize(0, 0))
        self.tableWidget_diagWindow.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.tableWidget_diagWindow.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.tableWidget_diagWindow.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableWidget_diagWindow.setAlternatingRowColors(True)
        self.tableWidget_diagWindow.setIconSize(QtCore.QSize(0, 0))
        self.tableWidget_diagWindow.setRowCount(1)
        self.tableWidget_diagWindow.setColumnCount(1)
        self.tableWidget_diagWindow.setObjectName("tableWidget_diagWindow")
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_diagWindow.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget_diagWindow.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignTop)
        self.tableWidget_diagWindow.setItem(0, 0, item)
        self.tableWidget_diagWindow.horizontalHeader().setVisible(True)
        self.tableWidget_diagWindow.horizontalHeader().setDefaultSectionSize(689)
        self.tableWidget_diagWindow.horizontalHeader().setHighlightSections(False)
        self.tableWidget_diagWindow.horizontalHeader().setMinimumSectionSize(20)
        self.tableWidget_diagWindow.verticalHeader().setVisible(False)
        self.tableWidget_diagWindow.verticalHeader().setDefaultSectionSize(0)
        self.tableWidget_diagWindow.verticalHeader().setHighlightSections(False)
        self.tableWidget_diagWindow.verticalHeader().setMinimumSectionSize(20)
        self.tableWidget_diagWindow.verticalHeader().setStretchLastSection(True)
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(823, 30, 378, 515))
        self.frame.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame.setObjectName("frame")
        self.label_coinChoice = QtWidgets.QLabel(self.frame)
        self.label_coinChoice.setGeometry(QtCore.QRect(131, 59, 131, 21))
        self.label_coinChoice.setObjectName("label_coinChoice")
        self.label_refreshTime = QtWidgets.QLabel(self.frame)
        self.label_refreshTime.setEnabled(False)
        self.label_refreshTime.setGeometry(QtCore.QRect(10, 19, 191, 16))
        self.label_refreshTime.setObjectName("label_refreshTime")
        self.spinBox_refreshTime = QtWidgets.QSpinBox(self.frame)
        self.spinBox_refreshTime.setEnabled(False)
        self.spinBox_refreshTime.setGeometry(QtCore.QRect(10, 39, 42, 22))
        self.spinBox_refreshTime.setObjectName("spinBox_refreshTime")
        self.checkBox_tgBotOn = QtWidgets.QCheckBox(self.frame)
        self.checkBox_tgBotOn.setEnabled(True)
        self.checkBox_tgBotOn.setGeometry(QtCore.QRect(211, 21, 161, 17))
        self.checkBox_tgBotOn.setObjectName("checkBox_tgBotOn")
        self.pushButton_EnableRefreshTime = QtWidgets.QPushButton(self.frame)
        self.pushButton_EnableRefreshTime.setEnabled(False)
        self.pushButton_EnableRefreshTime.setGeometry(QtCore.QRect(60, 39, 75, 23))
        self.pushButton_EnableRefreshTime.setObjectName("pushButton_EnableRefreshTime")
        self.label_setPanel = QtWidgets.QLabel(self.frame)
        self.label_setPanel.setGeometry(QtCore.QRect(113, 1, 171, 20))
        self.label_setPanel.setObjectName("label_setPanel")
        self.comboBox_quotationCoin = QtWidgets.QComboBox(self.frame)
        self.comboBox_quotationCoin.setGeometry(QtCore.QRect(9, 113, 100, 22))
        self.comboBox_quotationCoin.setObjectName("comboBox_quotationCoin")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_quotationCoin.addItem("")
        self.comboBox_basicCoin = QtWidgets.QComboBox(self.frame)
        self.comboBox_basicCoin.setEnabled(True)
        self.comboBox_basicCoin.setGeometry(QtCore.QRect(121, 113, 100, 22))
        self.comboBox_basicCoin.setInputMethodHints(QtCore.Qt.ImhNone)
        self.comboBox_basicCoin.setEditable(False)
        self.comboBox_basicCoin.setInsertPolicy(QtWidgets.QComboBox.InsertAlphabetically)
        self.comboBox_basicCoin.setObjectName("comboBox_basicCoin")
        self.comboBox_basicCoin.addItem("")
        self.comboBox_basicCoin.addItem("")
        self.comboBox_basicCoin.addItem("")
        self.comboBox_basicCoin.addItem("")
        self.comboBox_basicCoin.addItem("")
        self.line_settingPanel = QtWidgets.QFrame(self.frame)
        self.line_settingPanel.setGeometry(QtCore.QRect(37, 242, 311, 16))
        self.line_settingPanel.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_settingPanel.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_settingPanel.setObjectName("line_settingPanel")
        self.pushButton_enableCoinChoice = QtWidgets.QPushButton(self.frame)
        self.pushButton_enableCoinChoice.setGeometry(QtCore.QRect(63, 143, 101, 23))
        self.pushButton_enableCoinChoice.setStyleSheet("background-color: rgb(126, 255, 112);")
        self.pushButton_enableCoinChoice.setObjectName("pushButton_enableCoinChoice")
        self.label_quotationCoin = QtWidgets.QLabel(self.frame)
        self.label_quotationCoin.setGeometry(QtCore.QRect(5, 90, 110, 20))
        self.label_quotationCoin.setObjectName("label_quotationCoin")
        self.label_basicCoin = QtWidgets.QLabel(self.frame)
        self.label_basicCoin.setGeometry(QtCore.QRect(129, 90, 110, 20))
        self.label_basicCoin.setObjectName("label_basicCoin")
        self.checkBox_circularRefresh = QtWidgets.QCheckBox(self.frame)
        self.checkBox_circularRefresh.setGeometry(QtCore.QRect(211, 42, 150, 17))
        self.checkBox_circularRefresh.setObjectName("checkBox_circularRefresh")
        self.checkBox_allCoinsRender = QtWidgets.QCheckBox(self.frame)
        self.checkBox_allCoinsRender.setGeometry(QtCore.QRect(11, 176, 160, 17))
        self.checkBox_allCoinsRender.setObjectName("checkBox_allCoinsRender")
        self.textBrowser_coinSearchBox = QtWidgets.QTextBrowser(self.frame)
        self.textBrowser_coinSearchBox.setEnabled(True)
        self.textBrowser_coinSearchBox.setGeometry(QtCore.QRect(225, 78, 145, 163))
        self.textBrowser_coinSearchBox.setStyleSheet("")
        self.textBrowser_coinSearchBox.setFrameShape(QtWidgets.QFrame.Box)
        self.textBrowser_coinSearchBox.setFrameShadow(QtWidgets.QFrame.Plain)
        self.textBrowser_coinSearchBox.setLineWidth(1)
        self.textBrowser_coinSearchBox.setObjectName("textBrowser_coinSearchBox")
        self.pushButton_addNewCoin = QtWidgets.QPushButton(self.frame)
        self.pushButton_addNewCoin.setGeometry(QtCore.QRect(246, 176, 100, 23))
        self.pushButton_addNewCoin.setStyleSheet("background-color: rgb(126, 255, 112);")
        self.pushButton_addNewCoin.setObjectName("pushButton_addNewCoin")
        self.label_coinSearch = QtWidgets.QLabel(self.frame)
        self.label_coinSearch.setGeometry(QtCore.QRect(241, 80, 110, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_coinSearch.sizePolicy().hasHeightForWidth())
        self.label_coinSearch.setSizePolicy(sizePolicy)
        self.label_coinSearch.setBaseSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.label_coinSearch.setFont(font)
        self.label_coinSearch.setTextFormat(QtCore.Qt.AutoText)
        self.label_coinSearch.setScaledContents(False)
        self.label_coinSearch.setAlignment(QtCore.Qt.AlignCenter)
        self.label_coinSearch.setWordWrap(False)
        self.label_coinSearch.setIndent(-1)
        self.label_coinSearch.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.label_coinSearch.setObjectName("label_coinSearch")
        self.lineEdit_coinSearch = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_coinSearch.setGeometry(QtCore.QRect(233, 113, 130, 20))
        self.lineEdit_coinSearch.setClearButtonEnabled(True)
        self.lineEdit_coinSearch.setObjectName("lineEdit_coinSearch")
        self.pushButton_coinSearch = QtWidgets.QPushButton(self.frame)
        self.pushButton_coinSearch.setGeometry(QtCore.QRect(259, 142, 75, 23))
        self.pushButton_coinSearch.setStyleSheet("background-color: rgb(126, 255, 112);")
        self.pushButton_coinSearch.setObjectName("pushButton_coinSearch")
        self.pushButton_deleteCoin = QtWidgets.QPushButton(self.frame)
        self.pushButton_deleteCoin.setGeometry(QtCore.QRect(246, 210, 100, 23))
        self.pushButton_deleteCoin.setStyleSheet("background-color: rgb(255, 40, 25);")
        self.pushButton_deleteCoin.setObjectName("pushButton_deleteCoin")
        self.label_tradeSettings = QtWidgets.QLabel(self.frame)
        self.label_tradeSettings.setGeometry(QtCore.QRect(91, 251, 230, 21))
        self.label_tradeSettings.setObjectName("label_tradeSettings")
        self.label_exchangeType = QtWidgets.QLabel(self.frame)
        self.label_exchangeType.setEnabled(False)
        self.label_exchangeType.setGeometry(QtCore.QRect(10, 298, 81, 20))
        self.label_exchangeType.setObjectName("label_exchangeType")
        self.comboBox_exchangeType = QtWidgets.QComboBox(self.frame)
        self.comboBox_exchangeType.setEnabled(False)
        self.comboBox_exchangeType.setGeometry(QtCore.QRect(9, 318, 100, 22))
        self.comboBox_exchangeType.setObjectName("comboBox_exchangeType")
        self.comboBox_exchangeType.addItem("")
        self.comboBox_exchangeType.addItem("")
        self.comboBox_exchangeType.addItem("")
        self.comboBox_exchangeType.addItem("")
        self.label_dealType = QtWidgets.QLabel(self.frame)
        self.label_dealType.setEnabled(False)
        self.label_dealType.setGeometry(QtCore.QRect(13, 341, 81, 20))
        self.label_dealType.setObjectName("label_dealType")
        self.comboBox_dealType = QtWidgets.QComboBox(self.frame)
        self.comboBox_dealType.setEnabled(False)
        self.comboBox_dealType.setGeometry(QtCore.QRect(9, 361, 100, 22))
        self.comboBox_dealType.setObjectName("comboBox_dealType")
        self.comboBox_dealType.addItem("")
        self.comboBox_dealType.addItem("")
        self.label_orderType = QtWidgets.QLabel(self.frame)
        self.label_orderType.setEnabled(False)
        self.label_orderType.setGeometry(QtCore.QRect(13, 383, 81, 20))
        self.label_orderType.setObjectName("label_orderType")
        self.comboBox_orderType = QtWidgets.QComboBox(self.frame)
        self.comboBox_orderType.setEnabled(False)
        self.comboBox_orderType.setGeometry(QtCore.QRect(9, 403, 100, 22))
        self.comboBox_orderType.setObjectName("comboBox_orderType")
        self.comboBox_orderType.addItem("")
        self.comboBox_orderType.addItem("")
        self.label_buyAmount = QtWidgets.QLabel(self.frame)
        self.label_buyAmount.setEnabled(False)
        self.label_buyAmount.setGeometry(QtCore.QRect(10, 429, 81, 16))
        self.label_buyAmount.setObjectName("label_buyAmount")
        self.spinBox_buyAmount = QtWidgets.QSpinBox(self.frame)
        self.spinBox_buyAmount.setEnabled(False)
        self.spinBox_buyAmount.setGeometry(QtCore.QRect(9, 449, 42, 22))
        self.spinBox_buyAmount.setObjectName("spinBox_buyAmount")
        self.label_currencyPrice = QtWidgets.QLabel(self.frame)
        self.label_currencyPrice.setEnabled(False)
        self.label_currencyPrice.setGeometry(QtCore.QRect(100, 429, 81, 16))
        self.label_currencyPrice.setObjectName("label_currencyPrice")
        self.doubleSpinBox_currencyPrice = QtWidgets.QDoubleSpinBox(self.frame)
        self.doubleSpinBox_currencyPrice.setEnabled(False)
        self.doubleSpinBox_currencyPrice.setGeometry(QtCore.QRect(100, 449, 62, 22))
        self.doubleSpinBox_currencyPrice.setObjectName("doubleSpinBox_currencyPrice")
        self.pushButton_apiKeysLoad = QtWidgets.QPushButton(self.frame)
        self.pushButton_apiKeysLoad.setGeometry(QtCore.QRect(9, 272, 101, 23))
        self.pushButton_apiKeysLoad.setStyleSheet("background-color: rgb(126, 255, 112);")
        self.pushButton_apiKeysLoad.setObjectName("pushButton_apiKeysLoad")
        self.pushButton_cancelOrder = QtWidgets.QPushButton(self.frame)
        self.pushButton_cancelOrder.setEnabled(False)
        self.pushButton_cancelOrder.setGeometry(QtCore.QRect(270, 448, 101, 23))
        self.pushButton_cancelOrder.setStyleSheet("background-color: rgb(255, 40, 25);")
        self.pushButton_cancelOrder.setObjectName("pushButton_cancelOrder")
        self.pushButton_placeOrder = QtWidgets.QPushButton(self.frame)
        self.pushButton_placeOrder.setEnabled(False)
        self.pushButton_placeOrder.setGeometry(QtCore.QRect(270, 415, 101, 23))
        self.pushButton_placeOrder.setStyleSheet("background-color: rgb(126, 255, 112);")
        self.pushButton_placeOrder.setObjectName("pushButton_placeOrder")
        self.pushButton_getBalances = QtWidgets.QPushButton(self.frame)
        self.pushButton_getBalances.setEnabled(False)
        self.pushButton_getBalances.setGeometry(QtCore.QRect(270, 381, 101, 23))
        self.pushButton_getBalances.setStyleSheet("background-color: rgb(126, 255, 112);")
        self.pushButton_getBalances.setObjectName("pushButton_getBalances")
        self.comboBox_tradeQuotCoin = QtWidgets.QComboBox(self.frame)
        self.comboBox_tradeQuotCoin.setEnabled(False)
        self.comboBox_tradeQuotCoin.setGeometry(QtCore.QRect(120, 361, 100, 22))
        self.comboBox_tradeQuotCoin.setObjectName("comboBox_tradeQuotCoin")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.comboBox_tradeQuotCoin.addItem("")
        self.label_tradeQuotCoin = QtWidgets.QLabel(self.frame)
        self.label_tradeQuotCoin.setEnabled(False)
        self.label_tradeQuotCoin.setGeometry(QtCore.QRect(120, 340, 111, 20))
        self.label_tradeQuotCoin.setObjectName("label_tradeQuotCoin")
        self.comboBox_tradeBaseCoin = QtWidgets.QComboBox(self.frame)
        self.comboBox_tradeBaseCoin.setEnabled(False)
        self.comboBox_tradeBaseCoin.setGeometry(QtCore.QRect(120, 403, 100, 22))
        self.comboBox_tradeBaseCoin.setInputMethodHints(QtCore.Qt.ImhNone)
        self.comboBox_tradeBaseCoin.setEditable(False)
        self.comboBox_tradeBaseCoin.setInsertPolicy(QtWidgets.QComboBox.InsertAlphabetically)
        self.comboBox_tradeBaseCoin.setObjectName("comboBox_tradeBaseCoin")
        self.comboBox_tradeBaseCoin.addItem("")
        self.comboBox_tradeBaseCoin.addItem("")
        self.comboBox_tradeBaseCoin.addItem("")
        self.comboBox_tradeBaseCoin.addItem("")
        self.comboBox_tradeBaseCoin.addItem("")
        self.label_tradeBaseCoin = QtWidgets.QLabel(self.frame)
        self.label_tradeBaseCoin.setEnabled(False)
        self.label_tradeBaseCoin.setGeometry(QtCore.QRect(121, 382, 110, 20))
        self.label_tradeBaseCoin.setObjectName("label_tradeBaseCoin")
        self.pushButton_getOpenOrdersInfo = QtWidgets.QPushButton(self.frame)
        self.pushButton_getOpenOrdersInfo.setEnabled(False)
        self.pushButton_getOpenOrdersInfo.setGeometry(QtCore.QRect(220, 482, 151, 23))
        self.pushButton_getOpenOrdersInfo.setStyleSheet("background-color: rgb(126, 255, 112);")
        self.pushButton_getOpenOrdersInfo.setObjectName("pushButton_getOpenOrdersInfo")
        self.checkBox_enableImitatitonTrade = QtWidgets.QCheckBox(self.frame)
        self.checkBox_enableImitatitonTrade.setEnabled(False)
        self.checkBox_enableImitatitonTrade.setGeometry(QtCore.QRect(190, 280, 180, 17))
        self.checkBox_enableImitatitonTrade.setObjectName("checkBox_enableImitatitonTrade")
        self.textBrowser_tradeImitationBox = QtWidgets.QTextBrowser(self.frame)
        self.textBrowser_tradeImitationBox.setEnabled(False)
        self.textBrowser_tradeImitationBox.setGeometry(QtCore.QRect(180, 274, 191, 31))
        self.textBrowser_tradeImitationBox.setStyleSheet("")
        self.textBrowser_tradeImitationBox.setFrameShape(QtWidgets.QFrame.Box)
        self.textBrowser_tradeImitationBox.setFrameShadow(QtWidgets.QFrame.Plain)
        self.textBrowser_tradeImitationBox.setLineWidth(1)
        self.textBrowser_tradeImitationBox.setObjectName("textBrowser_tradeImitationBox")
        self.pushButton_cryptoBotStart = QtWidgets.QPushButton(self.frame)
        self.pushButton_cryptoBotStart.setEnabled(False)
        self.pushButton_cryptoBotStart.setGeometry(QtCore.QRect(180, 310, 190, 23))
        self.pushButton_cryptoBotStart.setStyleSheet("background-color: rgb(126, 255, 112);")
        self.pushButton_cryptoBotStart.setObjectName("pushButton_cryptoBotStart")
        self.textBrowser_tradeImitationBox.raise_()
        self.label_coinChoice.raise_()
        self.label_refreshTime.raise_()
        self.spinBox_refreshTime.raise_()
        self.checkBox_tgBotOn.raise_()
        self.pushButton_EnableRefreshTime.raise_()
        self.label_setPanel.raise_()
        self.comboBox_quotationCoin.raise_()
        self.comboBox_basicCoin.raise_()
        self.line_settingPanel.raise_()
        self.pushButton_enableCoinChoice.raise_()
        self.label_quotationCoin.raise_()
        self.label_basicCoin.raise_()
        self.checkBox_circularRefresh.raise_()
        self.checkBox_allCoinsRender.raise_()
        self.textBrowser_coinSearchBox.raise_()
        self.pushButton_addNewCoin.raise_()
        self.label_coinSearch.raise_()
        self.lineEdit_coinSearch.raise_()
        self.pushButton_coinSearch.raise_()
        self.pushButton_deleteCoin.raise_()
        self.label_tradeSettings.raise_()
        self.label_exchangeType.raise_()
        self.comboBox_exchangeType.raise_()
        self.label_dealType.raise_()
        self.comboBox_dealType.raise_()
        self.label_orderType.raise_()
        self.comboBox_orderType.raise_()
        self.label_buyAmount.raise_()
        self.spinBox_buyAmount.raise_()
        self.label_currencyPrice.raise_()
        self.doubleSpinBox_currencyPrice.raise_()
        self.pushButton_apiKeysLoad.raise_()
        self.pushButton_cancelOrder.raise_()
        self.pushButton_placeOrder.raise_()
        self.pushButton_getBalances.raise_()
        self.comboBox_tradeQuotCoin.raise_()
        self.label_tradeQuotCoin.raise_()
        self.comboBox_tradeBaseCoin.raise_()
        self.label_tradeBaseCoin.raise_()
        self.pushButton_getOpenOrdersInfo.raise_()
        self.checkBox_enableImitatitonTrade.raise_()
        self.pushButton_cryptoBotStart.raise_()
        self.pushButton_loadSiteData = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_loadSiteData.setGeometry(QtCore.QRect(11, 126, 110, 23))
        self.pushButton_loadSiteData.setStyleSheet("background-color: rgb(126, 255, 112);")
        self.pushButton_loadSiteData.setObjectName("pushButton_loadSiteData")
        self.tableWidget_activeOrdersWindow = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget_activeOrdersWindow.setGeometry(QtCore.QRect(131, 290, 687, 156))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableWidget_activeOrdersWindow.sizePolicy().hasHeightForWidth())
        self.tableWidget_activeOrdersWindow.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.tableWidget_activeOrdersWindow.setFont(font)
        self.tableWidget_activeOrdersWindow.setAutoFillBackground(False)
        self.tableWidget_activeOrdersWindow.setStyleSheet("")
        self.tableWidget_activeOrdersWindow.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.tableWidget_activeOrdersWindow.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.tableWidget_activeOrdersWindow.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.tableWidget_activeOrdersWindow.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableWidget_activeOrdersWindow.setDragEnabled(False)
        self.tableWidget_activeOrdersWindow.setAlternatingRowColors(True)
        self.tableWidget_activeOrdersWindow.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.tableWidget_activeOrdersWindow.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectItems)
        self.tableWidget_activeOrdersWindow.setShowGrid(True)
        self.tableWidget_activeOrdersWindow.setGridStyle(QtCore.Qt.SolidLine)
        self.tableWidget_activeOrdersWindow.setWordWrap(True)
        self.tableWidget_activeOrdersWindow.setCornerButtonEnabled(True)
        self.tableWidget_activeOrdersWindow.setRowCount(5)
        self.tableWidget_activeOrdersWindow.setColumnCount(6)
        self.tableWidget_activeOrdersWindow.setObjectName("tableWidget_activeOrdersWindow")
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        item.setFont(font)
        self.tableWidget_activeOrdersWindow.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget_activeOrdersWindow.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget_activeOrdersWindow.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget_activeOrdersWindow.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(False)
        item.setFont(font)
        item.setBackground(QtGui.QColor(207, 207, 205))
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        item.setForeground(brush)
        self.tableWidget_activeOrdersWindow.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget_activeOrdersWindow.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        brush = QtGui.QBrush(QtGui.QColor(14, 255, 22))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setBackground(brush)
        self.tableWidget_activeOrdersWindow.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        brush = QtGui.QBrush(QtGui.QColor(181, 181, 181))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setBackground(brush)
        self.tableWidget_activeOrdersWindow.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_activeOrdersWindow.setItem(0, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_activeOrdersWindow.setItem(0, 5, item)
        self.tableWidget_activeOrdersWindow.horizontalHeader().setVisible(True)
        self.tableWidget_activeOrdersWindow.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget_activeOrdersWindow.horizontalHeader().setDefaultSectionSize(111)
        self.tableWidget_activeOrdersWindow.horizontalHeader().setHighlightSections(False)
        self.tableWidget_activeOrdersWindow.horizontalHeader().setMinimumSectionSize(32)
        self.tableWidget_activeOrdersWindow.horizontalHeader().setSortIndicatorShown(False)
        self.tableWidget_activeOrdersWindow.horizontalHeader().setStretchLastSection(True)
        self.tableWidget_activeOrdersWindow.verticalHeader().setVisible(False)
        self.tableWidget_activeOrdersWindow.verticalHeader().setCascadingSectionResizes(True)
        self.tableWidget_activeOrdersWindow.verticalHeader().setDefaultSectionSize(17)
        self.tableWidget_activeOrdersWindow.verticalHeader().setHighlightSections(False)
        self.tableWidget_activeOrdersWindow.verticalHeader().setMinimumSectionSize(15)
        self.tableWidget_activeOrdersWindow.verticalHeader().setSortIndicatorShown(False)
        self.tableWidget_activeOrdersWindow.verticalHeader().setStretchLastSection(True)
        self.label_currenciesInformWindow = QtWidgets.QLabel(self.centralwidget)
        self.label_currenciesInformWindow.setGeometry(QtCore.QRect(389, 26, 211, 20))
        self.label_currenciesInformWindow.setObjectName("label_currenciesInformWindow")
        self.label_activeOrdersInfo = QtWidgets.QLabel(self.centralwidget)
        self.label_activeOrdersInfo.setGeometry(QtCore.QRect(400, 269, 211, 20))
        self.label_activeOrdersInfo.setObjectName("label_activeOrdersInfo")
        CryptoMonkey.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(CryptoMonkey)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1209, 21))
        self.menubar.setDefaultUp(False)
        self.menubar.setObjectName("menubar")
        self.menu_file = QtWidgets.QMenu(self.menubar)
        self.menu_file.setObjectName("menu_file")
        self.menu_help = QtWidgets.QMenu(self.menubar)
        self.menu_help.setObjectName("menu_help")
        self.menu_settings = QtWidgets.QMenu(self.menubar)
        self.menu_settings.setObjectName("menu_settings")
        CryptoMonkey.setMenuBar(self.menubar)
        self.action_mirrorsInput = QtWidgets.QAction(CryptoMonkey)
        self.action_mirrorsInput.setObjectName("action_mirrorsInput")
        self.action_additionalSettings = QtWidgets.QAction(CryptoMonkey)
        self.action_additionalSettings.setObjectName("action_additionalSettings")
        self.menu_settings.addAction(self.action_mirrorsInput)
        self.menu_settings.addAction(self.action_additionalSettings)
        self.menubar.addAction(self.menu_file.menuAction())
        self.menubar.addAction(self.menu_settings.menuAction())
        self.menubar.addAction(self.menu_help.menuAction())

        self.retranslateUi(CryptoMonkey)
        QtCore.QMetaObject.connectSlotsByName(CryptoMonkey)

    def retranslateUi(self, CryptoMonkey):
        _translate = QtCore.QCoreApplication.translate
        CryptoMonkey.setWindowTitle(_translate("CryptoMonkey", "CryptoMonkey"))
        self.treeWidget_siteList.setSortingEnabled(False)
        self.treeWidget_siteList.headerItem().setText(0, _translate("CryptoMonkey", "Выбор площадок"))
        __sortingEnabled = self.treeWidget_siteList.isSortingEnabled()
        self.treeWidget_siteList.setSortingEnabled(False)
        self.treeWidget_siteList.topLevelItem(0).setText(0, _translate("CryptoMonkey", "Myfin"))
        self.treeWidget_siteList.topLevelItem(1).setText(0, _translate("CryptoMonkey", "Kucoin"))
        self.treeWidget_siteList.topLevelItem(2).setText(0, _translate("CryptoMonkey", "Coinbase"))
        self.treeWidget_siteList.topLevelItem(3).setText(0, _translate("CryptoMonkey", "Huobi"))
        self.treeWidget_siteList.setSortingEnabled(__sortingEnabled)
        self.tableWidget_mainResultWindow.setSortingEnabled(False)
        item = self.tableWidget_mainResultWindow.horizontalHeaderItem(0)
        item.setText(_translate("CryptoMonkey", "Торговая площадка"))
        item = self.tableWidget_mainResultWindow.horizontalHeaderItem(1)
        item.setText(_translate("CryptoMonkey", "Валютная пара"))
        item = self.tableWidget_mainResultWindow.horizontalHeaderItem(2)
        item.setText(_translate("CryptoMonkey", "Котировка"))
        __sortingEnabled = self.tableWidget_mainResultWindow.isSortingEnabled()
        self.tableWidget_mainResultWindow.setSortingEnabled(False)
        self.tableWidget_mainResultWindow.setSortingEnabled(__sortingEnabled)
        item = self.tableWidget_diagWindow.horizontalHeaderItem(0)
        item.setText(_translate("CryptoMonkey", "Системные сообщения и дополнительная информация"))
        __sortingEnabled = self.tableWidget_diagWindow.isSortingEnabled()
        self.tableWidget_diagWindow.setSortingEnabled(False)
        self.tableWidget_diagWindow.setSortingEnabled(__sortingEnabled)
        self.label_coinChoice.setText(_translate("CryptoMonkey", "<html><head/><body><p align=\"center\"><span style=\" font-weight:600;\">Выбор валют</span></p></body></html>"))
        self.label_refreshTime.setText(_translate("CryptoMonkey", "<html><head/><body><p>Время обновления данных парсеров</p></body></html>"))
        self.checkBox_tgBotOn.setText(_translate("CryptoMonkey", "Включение телеграмм-бота"))
        self.pushButton_EnableRefreshTime.setText(_translate("CryptoMonkey", "Установить"))
        self.label_setPanel.setText(_translate("CryptoMonkey", "<html><head/><body><p align=\"center\"><span style=\" font-size:10pt; font-weight:600;\">Панель настроек</span></p></body></html>"))
        self.comboBox_quotationCoin.setItemText(0, _translate("CryptoMonkey", "XRP"))
        self.comboBox_quotationCoin.setItemText(1, _translate("CryptoMonkey", "BTC"))
        self.comboBox_quotationCoin.setItemText(2, _translate("CryptoMonkey", "ETH"))
        self.comboBox_quotationCoin.setItemText(3, _translate("CryptoMonkey", "USDT"))
        self.comboBox_quotationCoin.setItemText(4, _translate("CryptoMonkey", "BNB"))
        self.comboBox_quotationCoin.setItemText(5, _translate("CryptoMonkey", "USD Coin"))
        self.comboBox_quotationCoin.setItemText(6, _translate("CryptoMonkey", "Cardano"))
        self.comboBox_quotationCoin.setItemText(7, _translate("CryptoMonkey", "Dogecoin"))
        self.comboBox_quotationCoin.setItemText(8, _translate("CryptoMonkey", "Solana"))
        self.comboBox_quotationCoin.setItemText(9, _translate("CryptoMonkey", "TRON"))
        self.comboBox_quotationCoin.setItemText(10, _translate("CryptoMonkey", "Ton"))
        self.comboBox_quotationCoin.setItemText(11, _translate("CryptoMonkey", "Dai"))
        self.comboBox_quotationCoin.setItemText(12, _translate("CryptoMonkey", "Polkadot"))
        self.comboBox_quotationCoin.setItemText(13, _translate("CryptoMonkey", "Polygon"))
        self.comboBox_quotationCoin.setItemText(14, _translate("CryptoMonkey", "Litecoin"))
        self.comboBox_quotationCoin.setItemText(15, _translate("CryptoMonkey", "SHIBA INU"))
        self.comboBox_quotationCoin.setItemText(16, _translate("CryptoMonkey", "Wrapped Bitcoin"))
        self.comboBox_quotationCoin.setItemText(17, _translate("CryptoMonkey", "Bitcoin Cash"))
        self.comboBox_quotationCoin.setItemText(18, _translate("CryptoMonkey", "UNUS SED LEO"))
        self.comboBox_quotationCoin.setItemText(19, _translate("CryptoMonkey", "Avalanche"))
        self.comboBox_quotationCoin.setItemText(20, _translate("CryptoMonkey", "TrueUSD"))
        self.comboBox_quotationCoin.setItemText(21, _translate("CryptoMonkey", "Chainlink"))
        self.comboBox_quotationCoin.setItemText(22, _translate("CryptoMonkey", "Stellar Lumens"))
        self.comboBox_quotationCoin.setItemText(23, _translate("CryptoMonkey", "Binance USD"))
        self.comboBox_quotationCoin.setItemText(24, _translate("CryptoMonkey", "Monero"))
        self.comboBox_quotationCoin.setItemText(25, _translate("CryptoMonkey", "Uniswap"))
        self.comboBox_quotationCoin.setItemText(26, _translate("CryptoMonkey", "Aave UNI V2"))
        self.comboBox_quotationCoin.setItemText(27, _translate("CryptoMonkey", "OKB"))
        self.comboBox_quotationCoin.setItemText(28, _translate("CryptoMonkey", "Cosmos"))
        self.comboBox_quotationCoin.setItemText(29, _translate("CryptoMonkey", "Ethereum Classic"))
        self.comboBox_quotationCoin.setItemText(30, _translate("CryptoMonkey", "Binance Chain Native Token"))
        self.comboBox_quotationCoin.setItemText(31, _translate("CryptoMonkey", "Crypto.com Coin"))
        self.comboBox_quotationCoin.setItemText(32, _translate("CryptoMonkey", "Hedera Hashgraph"))
        self.comboBox_quotationCoin.setItemText(33, _translate("CryptoMonkey", "THETA"))
        self.comboBox_quotationCoin.setItemText(34, _translate("CryptoMonkey", "Wrapped Bitcoin"))
        self.comboBox_quotationCoin.setItemText(35, _translate("CryptoMonkey", "IOTA"))
        self.comboBox_quotationCoin.setItemText(36, _translate("CryptoMonkey", "Bitcoin Cash"))
        self.comboBox_quotationCoin.setItemText(37, _translate("CryptoMonkey", "Stellar"))
        self.comboBox_quotationCoin.setItemText(38, _translate("CryptoMonkey", "Acala"))
        self.comboBox_quotationCoin.setItemText(39, _translate("CryptoMonkey", "XDC Mainnet"))
        self.comboBox_quotationCoin.setItemText(40, _translate("CryptoMonkey", "KuCoin Token"))
        self.comboBox_quotationCoin.setItemText(41, _translate("CryptoMonkey", "EOS"))
        self.comboBox_quotationCoin.setItemText(42, _translate("CryptoMonkey", "ZCash"))
        self.comboBox_quotationCoin.setItemText(43, _translate("CryptoMonkey", "NEO"))
        self.comboBox_quotationCoin.setItemText(44, _translate("CryptoMonkey", "DigitalCash"))
        self.comboBox_quotationCoin.setItemText(45, _translate("CryptoMonkey", "Verge"))
        self.comboBox_quotationCoin.setItemText(46, _translate("CryptoMonkey", "OmiseGo"))
        self.comboBox_quotationCoin.setItemText(47, _translate("CryptoMonkey", "NEM"))
        self.comboBox_quotationCoin.setItemText(48, _translate("CryptoMonkey", "DigiByte"))
        self.comboBox_quotationCoin.setItemText(49, _translate("CryptoMonkey", "Bitshares"))
        self.comboBox_basicCoin.setCurrentText(_translate("CryptoMonkey", "RUB"))
        self.comboBox_basicCoin.setItemText(0, _translate("CryptoMonkey", "RUB"))
        self.comboBox_basicCoin.setItemText(1, _translate("CryptoMonkey", "USDT"))
        self.comboBox_basicCoin.setItemText(2, _translate("CryptoMonkey", "USD"))
        self.comboBox_basicCoin.setItemText(3, _translate("CryptoMonkey", "EUR"))
        self.comboBox_basicCoin.setItemText(4, _translate("CryptoMonkey", "GBP"))
        self.pushButton_enableCoinChoice.setText(_translate("CryptoMonkey", "Применить"))
        self.label_quotationCoin.setText(_translate("CryptoMonkey", "Котируемая валюта"))
        self.label_basicCoin.setText(_translate("CryptoMonkey", "Базовая валюта"))
        self.checkBox_circularRefresh.setText(_translate("CryptoMonkey", "Циклическое обновление"))
        self.checkBox_allCoinsRender.setText(_translate("CryptoMonkey", "Отображать все котировки"))
        self.pushButton_addNewCoin.setText(_translate("CryptoMonkey", "Добавить валюту"))
        self.label_coinSearch.setText(_translate("CryptoMonkey", "<html><head/><body><p align=\"center\">Поиск по названию<br/>котируемой валюты</p></body></html>"))
        self.pushButton_coinSearch.setText(_translate("CryptoMonkey", "Поиск"))
        self.pushButton_deleteCoin.setText(_translate("CryptoMonkey", "Удалить валюту"))
        self.label_tradeSettings.setText(_translate("CryptoMonkey", "<html><head/><body><p align=\"center\"><span style=\" font-weight:600;\">Настройки автоматической торговли</span></p></body></html>"))
        self.label_exchangeType.setText(_translate("CryptoMonkey", "Криптобиржа"))
        self.comboBox_exchangeType.setItemText(0, _translate("CryptoMonkey", "Huobi"))
        self.comboBox_exchangeType.setItemText(1, _translate("CryptoMonkey", "Myfin"))
        self.comboBox_exchangeType.setItemText(2, _translate("CryptoMonkey", "Kucoin"))
        self.comboBox_exchangeType.setItemText(3, _translate("CryptoMonkey", "Coinbase"))
        self.label_dealType.setText(_translate("CryptoMonkey", "Вид сделки"))
        self.comboBox_dealType.setItemText(0, _translate("CryptoMonkey", "Покупка"))
        self.comboBox_dealType.setItemText(1, _translate("CryptoMonkey", "Продажа"))
        self.label_orderType.setText(_translate("CryptoMonkey", "Тип ордера"))
        self.comboBox_orderType.setItemText(0, _translate("CryptoMonkey", "Лимитный"))
        self.comboBox_orderType.setItemText(1, _translate("CryptoMonkey", "Рыночный"))
        self.label_buyAmount.setText(_translate("CryptoMonkey", "<html><head/><body><p>Кол-во валюты</p></body></html>"))
        self.label_currencyPrice.setText(_translate("CryptoMonkey", "<html><head/><body><p>Цена валюты</p></body></html>"))
        self.pushButton_apiKeysLoad.setText(_translate("CryptoMonkey", "Ввести ключи API"))
        self.pushButton_cancelOrder.setText(_translate("CryptoMonkey", "Отменить ордер"))
        self.pushButton_placeOrder.setText(_translate("CryptoMonkey", "Разместить ордер"))
        self.pushButton_getBalances.setText(_translate("CryptoMonkey", "Запросить баланс"))
        self.comboBox_tradeQuotCoin.setItemText(0, _translate("CryptoMonkey", "XRP"))
        self.comboBox_tradeQuotCoin.setItemText(1, _translate("CryptoMonkey", "BTC"))
        self.comboBox_tradeQuotCoin.setItemText(2, _translate("CryptoMonkey", "ETH"))
        self.comboBox_tradeQuotCoin.setItemText(3, _translate("CryptoMonkey", "USDT"))
        self.comboBox_tradeQuotCoin.setItemText(4, _translate("CryptoMonkey", "BNB"))
        self.comboBox_tradeQuotCoin.setItemText(5, _translate("CryptoMonkey", "USD Coin"))
        self.comboBox_tradeQuotCoin.setItemText(6, _translate("CryptoMonkey", "Cardano"))
        self.comboBox_tradeQuotCoin.setItemText(7, _translate("CryptoMonkey", "Dogecoin"))
        self.comboBox_tradeQuotCoin.setItemText(8, _translate("CryptoMonkey", "Solana"))
        self.comboBox_tradeQuotCoin.setItemText(9, _translate("CryptoMonkey", "TRON"))
        self.comboBox_tradeQuotCoin.setItemText(10, _translate("CryptoMonkey", "Ton"))
        self.comboBox_tradeQuotCoin.setItemText(11, _translate("CryptoMonkey", "Dai"))
        self.comboBox_tradeQuotCoin.setItemText(12, _translate("CryptoMonkey", "Polkadot"))
        self.comboBox_tradeQuotCoin.setItemText(13, _translate("CryptoMonkey", "Polygon"))
        self.comboBox_tradeQuotCoin.setItemText(14, _translate("CryptoMonkey", "Litecoin"))
        self.comboBox_tradeQuotCoin.setItemText(15, _translate("CryptoMonkey", "SHIBA INU"))
        self.comboBox_tradeQuotCoin.setItemText(16, _translate("CryptoMonkey", "Wrapped Bitcoin"))
        self.comboBox_tradeQuotCoin.setItemText(17, _translate("CryptoMonkey", "Bitcoin Cash"))
        self.comboBox_tradeQuotCoin.setItemText(18, _translate("CryptoMonkey", "UNUS SED LEO"))
        self.comboBox_tradeQuotCoin.setItemText(19, _translate("CryptoMonkey", "Avalanche"))
        self.comboBox_tradeQuotCoin.setItemText(20, _translate("CryptoMonkey", "TrueUSD"))
        self.comboBox_tradeQuotCoin.setItemText(21, _translate("CryptoMonkey", "Chainlink"))
        self.comboBox_tradeQuotCoin.setItemText(22, _translate("CryptoMonkey", "Stellar Lumens"))
        self.comboBox_tradeQuotCoin.setItemText(23, _translate("CryptoMonkey", "Binance USD"))
        self.comboBox_tradeQuotCoin.setItemText(24, _translate("CryptoMonkey", "Monero"))
        self.comboBox_tradeQuotCoin.setItemText(25, _translate("CryptoMonkey", "Uniswap"))
        self.comboBox_tradeQuotCoin.setItemText(26, _translate("CryptoMonkey", "Aave UNI V2"))
        self.comboBox_tradeQuotCoin.setItemText(27, _translate("CryptoMonkey", "OKB"))
        self.comboBox_tradeQuotCoin.setItemText(28, _translate("CryptoMonkey", "Cosmos"))
        self.comboBox_tradeQuotCoin.setItemText(29, _translate("CryptoMonkey", "Ethereum Classic"))
        self.comboBox_tradeQuotCoin.setItemText(30, _translate("CryptoMonkey", "Binance Chain Native Token"))
        self.comboBox_tradeQuotCoin.setItemText(31, _translate("CryptoMonkey", "Crypto.com Coin"))
        self.comboBox_tradeQuotCoin.setItemText(32, _translate("CryptoMonkey", "Hedera Hashgraph"))
        self.comboBox_tradeQuotCoin.setItemText(33, _translate("CryptoMonkey", "THETA"))
        self.comboBox_tradeQuotCoin.setItemText(34, _translate("CryptoMonkey", "Wrapped Bitcoin"))
        self.comboBox_tradeQuotCoin.setItemText(35, _translate("CryptoMonkey", "IOTA"))
        self.comboBox_tradeQuotCoin.setItemText(36, _translate("CryptoMonkey", "Bitcoin Cash"))
        self.comboBox_tradeQuotCoin.setItemText(37, _translate("CryptoMonkey", "Stellar"))
        self.comboBox_tradeQuotCoin.setItemText(38, _translate("CryptoMonkey", "Acala"))
        self.comboBox_tradeQuotCoin.setItemText(39, _translate("CryptoMonkey", "XDC Mainnet"))
        self.comboBox_tradeQuotCoin.setItemText(40, _translate("CryptoMonkey", "KuCoin Token"))
        self.comboBox_tradeQuotCoin.setItemText(41, _translate("CryptoMonkey", "EOS"))
        self.comboBox_tradeQuotCoin.setItemText(42, _translate("CryptoMonkey", "ZCash"))
        self.comboBox_tradeQuotCoin.setItemText(43, _translate("CryptoMonkey", "NEO"))
        self.comboBox_tradeQuotCoin.setItemText(44, _translate("CryptoMonkey", "DigitalCash"))
        self.comboBox_tradeQuotCoin.setItemText(45, _translate("CryptoMonkey", "Verge"))
        self.comboBox_tradeQuotCoin.setItemText(46, _translate("CryptoMonkey", "OmiseGo"))
        self.comboBox_tradeQuotCoin.setItemText(47, _translate("CryptoMonkey", "NEM"))
        self.comboBox_tradeQuotCoin.setItemText(48, _translate("CryptoMonkey", "DigiByte"))
        self.comboBox_tradeQuotCoin.setItemText(49, _translate("CryptoMonkey", "Bitshares"))
        self.label_tradeQuotCoin.setText(_translate("CryptoMonkey", "Котируемая валюта"))
        self.comboBox_tradeBaseCoin.setCurrentText(_translate("CryptoMonkey", "USDT"))
        self.comboBox_tradeBaseCoin.setItemText(0, _translate("CryptoMonkey", "USDT"))
        self.comboBox_tradeBaseCoin.setItemText(1, _translate("CryptoMonkey", "RUB"))
        self.comboBox_tradeBaseCoin.setItemText(2, _translate("CryptoMonkey", "USD"))
        self.comboBox_tradeBaseCoin.setItemText(3, _translate("CryptoMonkey", "EUR"))
        self.comboBox_tradeBaseCoin.setItemText(4, _translate("CryptoMonkey", "GBP"))
        self.label_tradeBaseCoin.setText(_translate("CryptoMonkey", "Базовая валюта"))
        self.pushButton_getOpenOrdersInfo.setText(_translate("CryptoMonkey", "Загрузить историю ордеров"))
        self.checkBox_enableImitatitonTrade.setText(_translate("CryptoMonkey", "Включить имитацию торговли"))
        self.pushButton_cryptoBotStart.setText(_translate("CryptoMonkey", "Настроить и запустить трейд-бота"))
        self.pushButton_loadSiteData.setText(_translate("CryptoMonkey", "Загрузить данные"))
        self.tableWidget_activeOrdersWindow.setSortingEnabled(False)
        item = self.tableWidget_activeOrdersWindow.horizontalHeaderItem(0)
        item.setText(_translate("CryptoMonkey", "Тип ордера/\n"
"ID ордера"))
        item = self.tableWidget_activeOrdersWindow.horizontalHeaderItem(1)
        item.setText(_translate("CryptoMonkey", "Валютная пара"))
        item = self.tableWidget_activeOrdersWindow.horizontalHeaderItem(2)
        item.setText(_translate("CryptoMonkey", "Количество"))
        item = self.tableWidget_activeOrdersWindow.horizontalHeaderItem(3)
        item.setText(_translate("CryptoMonkey", "Цена"))
        item = self.tableWidget_activeOrdersWindow.horizontalHeaderItem(4)
        item.setText(_translate("CryptoMonkey", "Криптобиржа"))
        item = self.tableWidget_activeOrdersWindow.horizontalHeaderItem(5)
        item.setText(_translate("CryptoMonkey", "Статус ордера"))
        __sortingEnabled = self.tableWidget_activeOrdersWindow.isSortingEnabled()
        self.tableWidget_activeOrdersWindow.setSortingEnabled(False)
        self.tableWidget_activeOrdersWindow.setSortingEnabled(__sortingEnabled)
        self.label_currenciesInformWindow.setText(_translate("CryptoMonkey", "<html><head/><body><p><span style=\" font-size:12pt;\">Информация по котировкам</span></p></body></html>"))
        self.label_activeOrdersInfo.setText(_translate("CryptoMonkey", "<html><head/><body><p><span style=\" font-size:12pt;\">Выставленные ордеры</span></p></body></html>"))
        self.menu_file.setTitle(_translate("CryptoMonkey", "Файл"))
        self.menu_help.setTitle(_translate("CryptoMonkey", "Справка"))
        self.menu_settings.setTitle(_translate("CryptoMonkey", "Настройки"))
        self.action_mirrorsInput.setText(_translate("CryptoMonkey", "Ввод актульных зеркал сайтов"))
        self.action_additionalSettings.setText(_translate("CryptoMonkey", "Дополнительные настройки"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    CryptoMonkey = QtWidgets.QMainWindow()
    ui = Ui_CryptoMonkey()
    ui.setupUi(CryptoMonkey)
    CryptoMonkey.show()
    sys.exit(app.exec_())
